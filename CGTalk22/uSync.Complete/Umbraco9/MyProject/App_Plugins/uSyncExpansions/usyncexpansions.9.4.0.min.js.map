{"version":3,"sources":["../../uSyncExpansions/expansion.service.js","../../uSyncExpansions/licence.controller.js","../../uSyncExpansions/components/error.component.js","../../uSyncExpansions/components/errordialog.controller.js","../../uSyncExpansions/components/licence.component.js","../../uSyncExpansions/resources/dependency.manager.js","../../uSyncExpansions/resources/item.manager.js","../../uSyncExpansions/resources/setting.manager.js"],"names":["angular","module","factory","$http","serviceRoot","Umbraco","Sys","ServerVariables","uSyncComplete","expansionService","getLicenceStatus","product","version","get","getLicence","saveLicence","licence","post","isLicenced","importItems","entityTypes","force","clientId","put","reportItems","exportItems","controller","$scope","notificationsService","uSyncExpansionService","vm","this","init","loading","then","result","status","data","save","buttonState","success","error","ExceptionMessage","errorComponent","templateUrl","application","applicationPath","bindings","title","controllerAs","editorService","openErrorDialog","options","message","view","close","open","component","pageTitle","model","licenceComponent","$onInit","dependencyFlags","none","includeChildren","includeAncestors","includeDependencies","includeFiles","includeMedia","includeLinked","includeMediaFiles","includeConfig","adjacentOnly","getFlags","flags","AdjacentOnly","getOptionsFlags","value","createBatches","items","size","batches","count","Math","ceil","length","let","b","batch","slice","push","getEntity","treeItem","itemManager","overlayService","localizationService","showAppSettings","titlekey","contentkey","settings","localizeMany","umbracoSettings","appPluginsPath","content","disableBackgroundClick","disableEscKey","hideSubmitButton","submit"],"mappings":"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","file":"usyncexpansions.9.4.0.min.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    function expansionService($http) {\r\n\r\n        var serviceRoot = Umbraco.Sys.ServerVariables.uSyncComplete.expansionService;\r\n        \r\n        var service = {\r\n            getLicenceStatus: getLicenceStatus,\r\n            getLicence: getLicence,\r\n            saveLicence: saveLicence,\r\n            isLicenced: isLicenced,\r\n\r\n            importItems: importItems,\r\n            reportItems: reportItems,\r\n            exportItems: exportItems\r\n        };\r\n\r\n        return service;\r\n\r\n        /////////////////\r\n        function isLicenced(product, version) {\r\n            return $http.get(serviceRoot + 'IsLicenced/?product=' + product + '&version=' + version)\r\n        }\r\n\r\n        function getLicenceStatus(product, version) {\r\n            return $http.get(serviceRoot + 'GetLicenceStatus/?product=' + product + '&version=' + version);\r\n        }\r\n\r\n        function getLicence(product, version) {\r\n            return $http.get(serviceRoot + 'GetLicence/?product=' + product + '&version=' + version);\r\n        }\r\n\r\n        function saveLicence(licence) {\r\n            return $http.post(serviceRoot + 'SaveLicence', licence);\r\n        }\r\n\r\n        function importItems(entityTypes, force, clientId) {\r\n            return $http.put(serviceRoot + 'importItems', {\r\n                entityTypes: entityTypes,\r\n                force: force,\r\n                clientId: clientId\r\n            });\r\n        }\r\n\r\n        function exportItems(entityTypes, clientId) {\r\n            return $http.post(serviceRoot + 'exportItems', {\r\n                entityTypes: entityTypes,\r\n                clientId: clientId\r\n            });\r\n        }\r\n\r\n        function reportItems(entityTypes, clientId) {\r\n            return $http.post(serviceRoot + 'reportItems', {\r\n                entityTypes: entityTypes,\r\n                clientId: clientId\r\n            });\r\n        }\r\n    }\r\n\r\n    angular.module('umbraco')\r\n        .factory('uSyncExpansionService', expansionService);\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    function licenceController($scope,\r\n        notificationsService,\r\n        uSyncExpansionService) {\r\n\r\n        var vm = this;\r\n        vm.loading = true;\r\n        vm.save = save;\r\n\r\n        vm.buttonState = 'init';\r\n\r\n        init();\r\n\r\n        function init() {\r\n            vm.loading = true;\r\n\r\n            uSyncExpansionService.getLicenceStatus('complete', '8.2.0')\r\n                .then(function (result) {\r\n                    vm.status = result.data;\r\n                });\r\n\r\n            uSyncExpansionService.getLicence('complete', '8.2.0')\r\n                .then(function (result) {\r\n                    vm.licence = result.data;\r\n                    vm.loading = false;\r\n                });\r\n        }\r\n\r\n        function save() {\r\n            vm.buttonState = 'busy';\r\n            uSyncExpansionService.saveLicence(vm.licence)\r\n                .then(function (result) {\r\n                    notificationsService.success('Saved', \"Licence Info Saved\");\r\n                    vm.buttonState = 'success';\r\n                    init();\r\n                }, function (error) {\r\n                    notificationsService.error('Error', \"Failed to save\" + error.data.ExceptionMessage);\r\n                    vm.buttonState = 'error';\r\n\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    angular.module('umbraco')\r\n        .controller('uSyncLicenceController', licenceController);\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    var errorComponent = {\r\n        templateUrl: Umbraco.Sys.ServerVariables.application.applicationPath + 'App_Plugins/uSyncExpansions/components/error.html',\r\n        bindings: {\r\n            error: '<',\r\n            title: '@',\r\n        },\r\n        controllerAs: 'vm',\r\n        controller: errorController\r\n    };\r\n\r\n    function errorController(editorService) {\r\n        var vm = this; \r\n\r\n        vm.openErrorDialog = openErrorDialog;\r\n\r\n        function openErrorDialog() {\r\n\r\n            var options = {\r\n                error: vm.error,\r\n                title: 'Error ' + vm.title,\r\n                message: vm.message,\r\n                view: Umbraco.Sys.ServerVariables.application.applicationPath + 'App_Plugins/uSyncExpansions/components/errordialog.html',\r\n                close: function () {\r\n                    editorService.close();\r\n                }\r\n            };\r\n\r\n            editorService.open(options);\r\n        }\r\n    }\r\n\r\n    angular.module('umbraco')\r\n        .component('usyncErrorBox', errorComponent);\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    function errorDialogController($scope) {\r\n\r\n        var vm = this;\r\n\r\n        vm.pageTitle = $scope.model.title;\r\n        vm.message = $scope.model.message;\r\n        vm.error = $scope.model.error;\r\n        vm.close = close;\r\n\r\n        function close() {\r\n            if ($scope.model.close) {\r\n                $scope.model.close();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    angular.module('umbraco')\r\n        .controller('uSyncErrorDialogController', errorDialogController);\r\n})();","/*\r\n * displays status of the licence in a box, it doesn't turn \r\n * licence functionality on or off, just tells you if you are\r\n */\r\n(function () {\r\n    'use strict';\r\n\r\n    var licenceComponent = {\r\n        templateUrl: Umbraco.Sys.ServerVariables.application.applicationPath + 'App_Plugins/uSyncExpansions/components/licence.html',\r\n        bindings: {\r\n            product: '<',\r\n            version: '<'\r\n        },\r\n        controllerAs: 'vm',\r\n        controller: licenceComponentController\r\n    };\r\n\r\n    function licenceComponentController(uSyncExpansionService) {\r\n\r\n        var vm = this;\r\n        vm.status = {};\r\n\r\n        vm.$onInit = function () {\r\n            uSyncExpansionService.getLicenceStatus(vm.product, vm.version)\r\n                .then(function (result) {\r\n                    vm.status = result.data;\r\n                });\r\n        };\r\n    }\r\n\r\n    angular.module('umbraco')\r\n        .component('usyncExpansionLicence', licenceComponent);\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    function dependencyManager() {\r\n\r\n        var dependencyFlags = {\r\n            none: 0,\r\n            includeChildren: 2,\r\n            includeAncestors: 4,\r\n            includeDependencies: 8,\r\n            includeFiles: 16,\r\n            includeMedia: 32,\r\n            includeLinked: 64,\r\n            includeMediaFiles: 128,\r\n            includeConfig: 256,\r\n            adjacentOnly: 512\r\n        };\r\n\r\n        return {\r\n            getFlags: getFlags,\r\n            getOptionsFlags: getOptionsFlags,\r\n\r\n            createBatches: createBatches\r\n        };\r\n\r\n        function getFlags(options) {\r\n\r\n            var flags = 0;\r\n            if (options.includeChildren) { flags |= dependencyFlags.includeChildren; }\r\n            if (options.includeAncestors) { flags |= dependencyFlags.includeAncestors; }\r\n            if (options.includeDependencies) { flags |= dependencyFlags.includeDependencies; }\r\n            if (options.includeFiles) { flags |= dependencyFlags.includeFiles; }\r\n            if (options.includeMedia) { flags |= dependencyFlags.includeMedia; }\r\n            if (options.includeLinked) { flags |= dependencyFlags.includeLinked; }\r\n            if (options.includeMediaFiles) { flags |= dependencyFlags.includeMediaFiles; }\r\n            if (options.includeConfig) { flags |= dependencyFlags.includeConfig; }\r\n            if (options.AdjacentOnly) { flags |= dependencyFlags.AdjacentOnly; }\r\n\r\n            return flags;\r\n        }\r\n\r\n        function getOptionsFlags(options) {\r\n\r\n            var flags = 0;\r\n            if (options.includeChildren?.value) { flags |= dependencyFlags.includeChildren; }\r\n            if (options.includeAncestors?.value) { flags |= dependencyFlags.includeAncestors; }\r\n            if (options.includeDependencies?.value) { flags |= dependencyFlags.includeDependencies; }\r\n            if (options.includeFiles?.value) { flags |= dependencyFlags.includeFiles; }\r\n            if (options.includeMedia?.value) { flags |= dependencyFlags.includeMedia; }\r\n            if (options.includeLinked?.value) { flags |= dependencyFlags.includeLinked; }\r\n            if (options.includeMediaFiles?.value) { flags |= dependencyFlags.includeMediaFiles; }\r\n            if (options.includeConfig?.value) { flags |= dependencyFlags.includeConfig; }\r\n            if (options.AdjacentOnly?.value) { flags |= dependencyFlags.AdjacentOnly; }\r\n\r\n            return flags;\r\n        }\r\n\r\n\r\n        function createBatches(items, size) {\r\n            var batches = [];\r\n            var count = Math.ceil(items.length / size);\r\n            for (let b = 0; b < count; b++) {\r\n                let batch = items.slice(b * size, (b + 1) * size);\r\n                batches.push(batch);\r\n            }\r\n            return batches;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    angular.module('umbraco')\r\n        .factory('uSyncDependencyManager', dependencyManager);\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    function itemManager($http) {\r\n\r\n        return {\r\n            getEntity: getEntity\r\n        };\r\n\r\n        function getEntity(treeItem) {\r\n            return $http.post(getUrl('getEntity'), treeItem);\r\n        }\r\n\r\n        // private\r\n        function getUrl(method) {\r\n            return Umbraco.Sys.ServerVariables.uSyncComplete.itemManager + method;\r\n        };\r\n    };\r\n\r\n    angular.module('umbraco')\r\n        .factory('uSyncItemManager', itemManager);\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    function settingManager(overlayService, localizationService) {\r\n\r\n\r\n        return {\r\n            showAppSettings: showAppSettings\r\n        };\r\n\r\n        /////////\r\n\r\n        function showAppSettings(titlekey, contentkey, settings) {\r\n\r\n            localizationService.localizeMany([titlekey, contentkey])\r\n                .then(function (value) {\r\n\r\n                    var options = {\r\n                        view: Umbraco.Sys.ServerVariables.umbracoSettings.appPluginsPath + '/uSyncExpansions/settings/overlay.html',\r\n                        title: value[0],\r\n                        content: value[1],\r\n                        settings: settings,\r\n                        disableBackgroundClick: true,\r\n                        disableEscKey: true,\r\n                        hideSubmitButton: true,\r\n                        submit: function () {\r\n                            overlayService.close();\r\n                        },\r\n                        close: function () {\r\n                            overlayService.close();\r\n                        }\r\n                    };\r\n\r\n                    overlayService.open(options);\r\n                });\r\n        }\r\n    };\r\n\r\n\r\n    angular.module('umbraco')\r\n        .factory('uSyncSettingManager', settingManager);\r\n})();\r\n"]}