!function(){"use strict";var uSyncItemBrowserComponent={templateUrl:Umbraco.Sys.ServerVariables.application.applicationPath+"App_Plugins/uSyncPublisher/components/uSyncItemBrowser.html",bindings:{items:"=",selection:"=",loadFolder:"&",loading:"=",server:"=",type:"@",layouts:"=",activeLayout:"="},controllerAs:"vm",controller:function($scope,editorService){var vm=this;function onClickItem(item,$event){$event.preventDefault(),$event.stopPropagation(),item.selected=!item.selected;var alreadySelected=!1;for(let i=0;i<vm.selection.length;i++)vm.selection[i].udi==item.udi&&(item.selected?alreadySelected=!0:vm.selection.splice(i,1));item.selected&&!alreadySelected&&vm.selection.push(item.localItem)}function activate(){for(var item,i=0;vm.items.nodes.length>i;i++)void 0!==(item=vm.items.nodes[i]).height&&void 0!==item.width&&(item.width=itemDefaultWidth,item.height=itemDefaultHeight,item.aspectRatio=1,item.aspectRatio=item.width/item.height,1<=item.aspectRatio?item.width>itemMaxWidth&&(item.width=itemMaxWidth,item.height=itemMaxWidth/item.aspectRatio):item.height>itemMaxHeight&&(item.height=itemMaxHeight,item.width=itemMaxHeight*item.aspectRatio))}vm.onClickItem=onClickItem,vm.onClickItemName=function(item,$event){$event.preventDefault(),$event.stopPropagation(),item.isFolder&&item.hasChildren&&vm.loadFolder?(vm.breadcrumb.push({key:item.key,name:item.name}),vm.loadFolder({key:item.key})):onClickItem(item,$event)},vm.onBreadcrumbItem=function(item,pos){pos<vm.breadcrumb.length-1&&(vm.breadcrumb.splice(pos=pos+1,vm.breadcrumb.length-pos),vm.loadFolder({key:vm.breadcrumb[vm.breadcrumb.length-1].key}))},vm.rootKey="00000000-0000-0000-0000-000000000000",vm.breadcrumb=[{key:vm.rootKey,name:"Media"}],vm.getChangeName=function(action){var name=vm.changeNames[action.change];return null==name||void 0===name?action.change:name},vm.current=vm.rootKey,vm.openDetail=function(options,$event){$event.preventDefault(),$event.stopPropagation();options={item:options,server:vm.server,viewFirst:!0,title:"uSync Change",view:Umbraco.Sys.ServerVariables.application.applicationPath+"App_Plugins/uSyncPublisher/dialogs/detail.html",close:function(){editorService.close()}};editorService.open(options)},vm.openSideBySide=function(item,$event){$event.preventDefault(),$event.stopPropagation(),editorService.open({view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"dialogs/sideBySide.html",title:"Side by Side",source:item.localUrl,target:item.remoteUrl,size:"",submit:function(model){editorService.close()},close:function(){editorService.close()}})},vm.selectLayout=function(layout){vm.activeLayout=layout,vm.layouts.forEach(e=>e.active=!1),layout.active=!0},vm.changeNames={NoChange:"In sync",Update:"Diffrent",Delete:"Not on target",Create:"No on local"};var itemDefaultHeight=200,itemDefaultWidth=200,itemMaxWidth=200,itemMaxHeight=200;var evts=[];evts.push($scope.$watch("vm.items",function(newValue,oldValue){void 0!==newValue&&_.isArray(newValue.nodes)&&(newValue.key===vm.rootKey&&(vm.breadcrumb=[vm.breadcrumb[0]]),activate())})),evts.push($scope.$watch("vm.serverName",function(name){void 0!==name&&(vm.breadcrumb[0].name=vm.type+" ["+name+"]")})),$scope.$on("$destroy",function(){for(var e in evts)evts[e]()})}};angular.module("umbraco").component("usyncItemBrowser",uSyncItemBrowserComponent)}(),function(){"use strict";var publishingComponent={templateUrl:Umbraco.Sys.ServerVariables.application.applicationPath+"App_Plugins/uSyncPublisher/components/uSyncPublishingAction.html",bindings:{mode:"<",single:"<",items:"=",options:"=",state:"=",actionButton:"=",headings:"=",isModal:"<",hideWhenPicked:"<"},controllerAs:"vm",controller:function($scope,$q,mediaResource,contentResource,dictionaryResource,localizationService,languageResource,uSyncHub,uSyncPublishService,uSyncPublishingService,uSyncActionManager,uSyncItemManager){var vm=this;vm.process={},vm.error={},vm.report=[],vm.actionButton={state:"init",name:"Send"},vm.showPickServer=!0,vm.servers=[],vm.selectedServer=null,vm.entityType="content",vm.onSelected=onSelected;var events=[];function onSelected(server){vm.flags=uSyncActionManager.prepToggles(server,vm.flags,vm.entityType),vm.headings.description=uSyncActionManager.getDescription(vm.mode,vm.entityType,server.name),vm.server=server,vm.process={id:uSyncActionManager.emptyGuid,actionAlias:"",server:vm.server.alias,mode:vm.mode,items:vm.items,steps:{stepIndex:0,pageNumber:0,handlerFolder:""},view:{show:!1,path:""},options:{primaryType:vm.entityType,removeOrphans:!1,includeFileHash:!1,includeSystemFileHash:!1,attributes:{},cultures:[]}},getAction(vm.process),$scope.$broadcast("sync-server-selected",{server:server,flags:vm.flags})}function onClose(){var process;void 0!==(process=vm.process).id&&null!==process.id&&process.id!=uSyncActionManager.emptyGuid&&uSyncPublishingService.clean(process.id,process.server).then(function(){})}function initComponent(){vm.showPickServer?[].push(uSyncPublishService.getServers(vm.mode).then(function(result){var servers,checks;vm.servers=result.data,servers=vm.servers,checks=[],servers.forEach(function(server){checks.push(uSyncPublishService.checkServer(server.alias).then(function(result){server.status=result.data}))}),$q.all(checks).then(function(){$scope.$broadcast("usync-servers-checked",servers)}),vm.state.loading=!1})):(vm.headings.title="Checking "+vm.selectedServer.name+" server",vm.headings.description="Contacting "+vm.selectedServer.url+" to confirm status",uSyncPublishService.checkServer(vm.selectedServer.alias).then(function(result){vm.state.loading=!1,vm.state.loadmessage="",vm.selectedServer.status=result.data,1!=result.data.enabled?(vm.state.hasError=!0,vm.simpleError='Server unreachable "'+result.data.status+'" '+result.data.message):onSelected(vm.selectedServer)}))}function getAction(process){vm.state.actionLoaded=!1;var request=makePublishRequest(process);uSyncPublishingService.getAction(request).then(function(result){vm.state.actionLoaded=!0,process.action=result.data,function(process){if(null!==process.action){if(process.actionAlias=process.action.alias,function(action){return void 0!==action.view&&null!==action.view&&0<action.view.length}(process.action))return function(process){process.view={show:!0,path:process.action.view,boxed:!process.action.unboxView},vm.state.valid=!0,vm.state.working=!1,vm.state.hideClose=!1,vm.showPickServer&&vm.hideWhenPicked&&(vm.showPickServer=!1,vm.headings={title:"Publish to "+vm.server.name,description:vm.server.url})}(process);!function(process){vm.state.working=!0,vm.state.hideClose=!0,process.view={show:!1,path:""}}(process),performAction(process)}}(process)})}function performAction(process){vm.showPickServer=!1,function(process){vm.state.actionName=process.actionAlias,vm.state.stepIndex=process.steps.stepIndex,vm.state.pageNumber=process.steps.pageNumber,vm.state.folder=process.steps.handlerFolder}(process);var request=makePublishRequest(process);uSyncPublishingService.performAction(request).then(function(response){response=response.data;response.success?(process=function(process,response){process.id=response.id,process.actionAlias=response.nextAction,process.items=response.items,process.steps={stepIndex:response.stepIndex,pageNumber:response.nextPage,handlerFolder:response.nextFolder},function(response){return void 0!==response.actions&&null!==response.actions&&0<response.actions.length}(response)&&(vm.report=response.actions);null!=response.progress&&null!=response.progress&&(vm.progress.currentStepIndex=response.progress.currentStepIndex,vm.progress.currentStepName=response.progress.currentStepName,function(steps){if(_.isArray(steps)){vm.progress.steps.length!=steps.length&&(vm.progress.steps=steps);for(let n=0;n<steps.length;n++)steps[n].icon==vm.progress.steps[n].icon&&steps[n].name==vm.progress.steps[n].name&&steps[n].status==vm.progress.steps[n].status||(vm.progress.steps[n]=steps[n])}}(response.progress.steps));return process}(process,response),response.processComplete?console.log("end ?"):(response.actionComplete?getAction:performAction)(process)):showError(response.error,request)},function(error){console.log(error),showError({title:"Server error",message:error.data},request)})}function makePublishRequest(process){return{id:process.id,server:process.server,mode:process.mode,items:process.items,actionAlias:process.actionAlias,stepIndex:process.steps.stepIndex,handlerFolder:process.steps.handlerFolder,pageNumber:process.steps.pageNumber,clientId:void 0===$.connection?"":$.connection.connectionId,options:process.options}}function showError(error,request){vm.state.hideClose=!1,vm.state.valid=!1,vm.state.working=!1,vm.state.hasError=!0,vm.error=error,vm.errorTitle="Error during "+request.actionAlias}events.push($scope.$on("usync-publish-performAction",function(){vm.process.view.show&&(vm.state.actionLoaded=!1),performAction(vm.process)})),events.push($scope.$on("usync-publish-close",function(){onClose()})),vm.$onInit=function(){vm.entityType=vm.items[0].entityType,vm.headings={title:"Select a server",description:vm.mode+" "+vm.entityType};var promises=[];void 0!==vm.options.serverAlias&&(vm.showPickServer=!1,promises.push(uSyncPublishService.getServer(vm.options.serverAlias).then(function(result){vm.selectedServer=result.data}))),$q.all(promises).then(function(){vm.flags=uSyncActionManager.initFlags(),vm.items[0].requiresFiles&&(vm.flags.includeFiles={toggle:!0,value:!0}),initComponent()}),localizationService.localize("usyncpublish_"+vm.mode+"Button").then(function(data){vm.actionButton.name=data}),uSyncHub.initHub(function(hub){vm.hub=hub,vm.hub.on("update",function(update){vm.update=update,vm.update.blocks=update.message.split("||")}),vm.hub.on("add",function(status){vm.status=status}),vm.hub.on("publisher",function(message){vm.message=message,calcStep(vm.message)}),vm.hub.start(function(result){})})},$scope.$on("destroy",function(){for(var e in events)events[e]()}),vm.progress={steps:[{icon:"icon-settings",name:"first-step",status:0},{icon:"icon-settings",name:"second-step",status:0},{icon:"icon-settings",name:"third-step",status:0}]},vm.calcPercentage=function(update){return null!=update?update.count/update.total*100:0}}};angular.module("umbraco").component("usyncPublishingAction",publishingComponent)}(),function(){"use strict";var publishResultComponent={templateUrl:Umbraco.Sys.ServerVariables.application.applicationPath+"App_Plugins/uSyncPublisher/components/uSyncPublishResult.html",bindings:{results:"<",total:"=",isModal:"<",server:"<"},controllerAs:"vm",controller:function($scope,editorService){var vm=this;function getTypeName(umbType){umbType=umbType.substring(umbType.lastIndexOf(".")+1);return"I"==umbType[0]?umbType.substring(1):umbType}function groupByType(results){var groups=[];results.map(function(item){var newGroup,found=!1;groups.map(function(group){group.type===item.itemType&&(group.items.push(item),found=!0)}),found||((newGroup={type:item.itemType,name:getTypeName(item.itemType),items:[],showGroup:!1}).items.push(item),groups.unshift(newGroup))});for(let i=0;i<groups.length;i++)groups[i].itemCount=function(results){var count=0;for(let i=0;i<results.length;i++)"Clean"!==results[i].change&&count++;return count}(groups[i].items),groups[i].changes=changeCount(groups[i].items);return 0<groups.length&&(groups[0].showGroup=!0),groups}function changeCount(changes){var count=0;return angular.forEach(changes,function(val,key){"NoChange"!==val.change&&"Clean"!==val.change&&count++}),count}vm.getTypeName=getTypeName,vm.showResult=function(result){return"Clean"!==result.change&&"NoChange"!==result.change},vm.openDetail=function(options){vm.isModal?options.show=!options.show:(options={item:options,server:vm.server,title:"uSync Change",view:Umbraco.Sys.ServerVariables.application.applicationPath+"App_Plugins/uSyncPublisher/dialogs/detail.html",close:function(){editorService.close()}},editorService.open(options))},vm.groups=[],vm.total=0,vm.noChangeList="",vm.$onInit=function(){var total,noChange;vm.groups=groupByType(vm.results),vm.total=(total=0,noChange=[],angular.forEach(vm.groups,function(group,key){var item=changeCount(group.items);total+=item,0===item&&(item="e"===group.name[group.name.length-1]?group.name+"s":group.name,noChange.push(item+" ("+group.items.length+")"))}),vm.noChangeList=noChange.join(", "),total)}}};angular.module("umbraco").component("usyncPublishResultView",publishResultComponent)}(),function(){var usyncReportSummaryComponent={templateUrl:Umbraco.Sys.ServerVariables.application.applicationPath+"App_Plugins/uSyncPublisher/components/uSyncReportSummary.html",bindings:{results:"=",stage:"<",toggle:"="},controllerAs:"vm",controller:function(){var vm=this;vm.getDetailText=function(changes,verb){var purals=1==changes?"item":"items";return"report"==vm.stage?changes+" "+purals+" will be "+verb:changes+" "+purals+(1==changes?" was ":" were ")+verb},vm.$onInit=function(){vm.summary=function(results){var summary={total:results.length,changes:0,update:0,create:0,delete:0,pending:0};for(let c=0;c<results.length;c++)switch(results[c].change){case"NoChange":break;case"Update":case"Import":summary.update++;break;case"Delete":summary.delete++;break;case"Create":summary.create++;break;case"WillChange":summary.pending++}return summary.changes=summary.update+summary.delete+summary.create,summary}(vm.results)}}};angular.module("umbraco").component("usyncReportSummary",usyncReportSummaryComponent)}(),function(){"use strict";var usyncSendOptionComponent={templateUrl:Umbraco.Sys.ServerVariables.application.applicationPath+"App_Plugins/uSyncPublisher/components/uSyncSendOption.html",bindings:{option:"=",label:"@",description:"@",showDisabled:"<",disabled:"=",disabledValue:"="},controllerAs:"vm",controller:function($scope,localizationService){var vm=this;vm.canToggle=function(option){return option.toggle},vm.toggle=function(option){option.toggle&&(option.value=!option.value)},vm.$onInit=function(){!function(){vm.label&&"@"===vm.label[0]?localizationService.localize(vm.label.substring(1)).then(function(data){vm.labelString=data}):vm.labelString=vm.label;vm.description&&"@"===vm.description[0]?localizationService.localize(vm.description.substring(1)).then(function(data){vm.descriptionString=data}):vm.descriptionString=vm.description}(),vm.default=vm.option.value};var evts=[];evts.push($scope.$watch("vm.disabled",function(newVal,oldVal){void 0!==newVal&&(!0===newVal?(vm.default=vm.option.value,vm.option.value=vm.disabledValue):vm.option.value=vm.default)})),vm.$onDestroy=function(){for(var e in evts)evts[e]()}}};angular.module("umbraco").component("usyncSendOption",usyncSendOptionComponent)}(),function(){"use strict";var serverPickerComponent={templateUrl:Umbraco.Sys.ServerVariables.application.applicationPath+"App_Plugins/uSyncPublisher/components/uSyncServerPicker.html",bindings:{pickerTitle:"@",description:"@",servers:"<",onSelected:"&",hideBox:"<"},controllerAs:"vm",controller:function($scope,$timeout,localizationService){var vm=this;vm.selectServer=selectServer;var unsubscribe=[];function selectServer(server){if(void 0!==server.status&&!0===server.status.enabled){for(let s=0;s<vm.servers.length;s++)vm.servers[s].selected=!1;server.selected=!0,vm.onSelected&&vm.onSelected({server:server})}}vm.$onInit=function(){vm.pickerTitle&&"@"===vm.pickerTitle[0]?localizationService.localize(vm.pickerTitle.substring(1)).then(function(data){vm.titleString=data}):vm.titleString=vm.pickerTitle,vm.description&&"@"===vm.description[0]?localizationService.localize(vm.description.substring(1)).then(function(data){vm.descriptionString=data}):vm.descriptionString=vm.description,void 0===vm.hideBox&&(vm.hideBox=!1),$timeout((unsubscribe.push($scope.$on("usync-servers-checked",function(e,servers){1===servers.length&&selectServer(servers[0])})),void(1===vm.servers.length&&selectServer(vm.servers[0]))),500)},vm.$onDestroy=function(){for(var e in unsubscribe)unsubscribe[e]()}}};angular.module("umbraco").component("usyncServerPicker",serverPickerComponent)}(),function(){"use strict";var userControlledBooleanComponent={templateUrl:Umbraco.Sys.ServerVariables.application.applicationPath+"App_Plugins/uSyncPublisher/components/uSyncUserControlledBoolean.html",bindings:{option:"="},controllerAs:"vm",controller:function($scope){var vm=this;vm.userControlled=function(){return void 0!==vm.option&&vm.option.startsWith("user-")},vm.toggleUser=function(){void 0===vm.option?vm.option="user-yes":vm.option.startsWith("user-")?vm.option=vm.option.substring(5):vm.option="user-"+vm.option},void 0!==vm.option?vm.getToggleValue(vm.option):$scope.$watch("vm.option",function(newValue){void 0===vm.toggle&&void 0!==newValue&&(vm.toggle="yes"===newValue.substring(newValue.indexOf("-")+1))});vm.changeToggle=function(model){vm.option=model?vm.option.substring(0,vm.option.indexOf("-")+1)+"yes":vm.option.substring(0,vm.option.indexOf("-")+1)+"no"}}};angular.module("umbraco").component("usyncUserControlledBoolean",userControlledBooleanComponent)}(),angular.module("umbraco").controller("uSyncPublisherBlankDashboardController",function($scope,$location,overlayService,uSyncPublishService){var vm=this;vm.onSelected=function(server){vm.server=server,vm.picked=!0},vm.performAction=function(){$scope.$broadcast("usync-publish-performAction")},vm.reset=function(){init()},vm.doSync=function(){vm.options={serverAlias:vm.server.alias,contentType:"settings",simple:!0},vm.items=[],vm.syncSettings&&(vm.items.push(makeRootItem("ContentTypes","document-type")),vm.items.push(makeRootItem("DocTypes","data-type")),vm.items.push(makeRootItem("MediaTypes","media-type")),vm.items.push(makeRootItem("Domains","domain")),vm.items.push(makeRootItem("MemberTypes","member-type")),vm.items.push(makeRootItem("DictionaryItems","dictionary-item")),vm.items.push(makeRootItem("Macros","macro")),vm.items.push(makeRootItem("Templates","template")),vm.items.push(makeRootItem("Languages","language","")));vm.syncContent&&(vm.items.push(makeRootItem("PublicAccess","protect")),vm.items.push(makeRootItem("Content","document")));vm.syncMedia&&vm.items.push(makeRootItem("Media","media"));vm.setup=!0};var emptyGuid="00000000-0000-0000-0000-000000000000";function showSeedPopup(){var url=Umbraco.Sys.ServerVariables.uSyncPublisher.seedUrl;uSyncPublishService.getServerByUrl(url).then(function(result){showDialog(result.data)})}function showDialog(overlay){overlay={title:"Seed from server",subtitle:"Get setting and content from another server",view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"overlay/overlayDialog.html",isModal:!0,mode:"Seed",options:{items:[{entityType:"IContent"}],serverAlias:overlay.alias,treeItem:null},disableBackdropClick:!0,disableEscKey:!0,skipFormValidation:!0,disableSubmitButton:!0,submitButtonLabel:"Continue",closeButtonLabel:"Close",submit:function(){null!=this.isComplete&&this.isComplete()?($scope.$broadcast("usync-publish-close"),overlayService.close()):null!=this.moveToNext&&this.moveToNext()},close:function(){overlayService.close()}};overlayService.open(overlay)}function init(){vm.setup=!1,vm.servers=[],vm.emptySite=!0,uSyncPublishService.hasContentOrMedia(!1).then(function(result){vm.emptySite=!result.data}),vm.picked=!1,vm.syncSettings=!0,vm.syncContent=!0,vm.syncMedia=!0,vm.items=[],vm.options={},vm.headings={},vm.stepArgs={},vm.state={complete:!1,loading:!0,hideClose:!0,valid:!1,working:!1},vm.actionButton={state:"init",name:"Send"},uSyncPublishService.getServers("pull").then(function(result){vm.servers=result.data,vm.servers.forEach(function(server){uSyncPublishService.checkServer(server.alias).then(function(result){vm.state.loading=!1,server.status=result.data})})})}function makeRootItem(name,typename,empty=emptyGuid){return{udi:"umb://"+typename+"/"+empty,name:name,variants:[{name:name}]}}vm.mode="settingsPull",vm.showPopup=!1,void 0!==$location.search().firstsync&&(vm.showPopup="true"==$location.search().firstsync),vm.showSeedPopup=showSeedPopup,vm.showDialog=showDialog,vm.showPopup&&showSeedPopup(),init()}),function(){"use strict";angular.module("umbraco").controller("uSyncPublisherBrowserDashboardController",function($scope,appState,uSyncPublishService,uSyncPublishDialogManager){var vm=this;function loadPage(pageNumber){vm.pageNum=pageNumber,null!=vm.currentKey?getFolders(vm.currentKey,vm.pageNum,!1):onSelected(vm.server,vm.pageNum)}function onSelected(server){vm.picked=!0,vm.local=!1,vm.selectionLabel="Pull selection",vm.server=server,vm.loading=!0,vm.pageNum=1,getFolders(vm.rootKey,vm.pageNum)}function getFolders(key,page,clear=!0){vm.loading=!0,vm.currentKey=key,clear&&clearSelection(),vm.local?"content"===vm.section?uSyncPublishService.getLocalContentFolders(key,page).then(function(result){vm.items=result.data,vm.loading=!1,checkContentItems(vm.local),updateSelection()}):uSyncPublishService.getLocalMediaFolders(key,page).then(function(result){vm.items=result.data,vm.loading=!1,checkMediaItems(vm.local),updateSelection()}):"content"===vm.section?uSyncPublishService.getContentFolders(key,vm.server.alias,page).then(function(result){vm.items=result.data,vm.loading=!1,checkContentItems(vm.local),updateSelection()}):uSyncPublishService.getMediaFolders(key,vm.server.alias,page).then(function(result){vm.items=result.data,vm.loading=!1,checkMediaItems(vm.local),updateSelection()})}function updateSelection(){_.forEach(vm.items.nodes,function(node){var selected=_.any(vm.selected,function(s){return s.udi==node.udi});node.selected=selected})}function checkContentItems(udis){udis&&null!=vm.items?(setLocal(vm.items.folders),setLocal(vm.items.nodes)):(udis=_.union(_.pluck(vm.items.folders,"udi"),_.pluck(vm.items.nodes,"udi")),uSyncPublishService.getContentChanges(udis,vm.server.alias).then(function(results){updateChanges(vm.items.folders,results.data),updateChanges(vm.items.nodes,results.data)}))}function setLocal(items){null!=items&&items.forEach(function(item){item.local=!0})}function checkMediaItems(udis){udis&&null!=vm.items?(setLocal(vm.items.folders),setLocal(vm.items.nodes)):(udis=_.union(_.pluck(vm.items.folders,"udi"),_.pluck(vm.items.nodes,"udi")),uSyncPublishService.getMediaChanges(udis,vm.server.alias).then(function(results){updateChanges(vm.items.folders,results.data),updateChanges(vm.items.nodes,results.data)}))}function updateChanges(items,changes){null!=items&&items.forEach(function(item){var index=_.findIndex(changes,{udi:item.udi});-1!=index&&(item.syncChecked=!0,item.syncAction=changes[index].action,item.syncChange="NoChange"!=changes[index].action.change)})}function refresh(){clearSelection(),vm.pageNum=1,null!=vm.currentKey?getFolders(vm.currentKey,vm.pageNum):onSelected(vm.server,vm.pageNum)}function clearSelection(){vm.selected=[],clearsSelectedItems(vm.items.folders),clearsSelectedItems(vm.items.nodes)}function clearsSelectedItems(items){if(null!=items)for(let i=0;i<items.length;i++)items[i].selected=!1}vm.section=appState.getSectionState("currentSection"),vm.servers=[],vm.server={},vm.picked=!1,vm.openDialog=function(){"content"===vm.section?vm.local?uSyncPublishDialogManager.openPublisherPushContent({items:vm.selected},function(result){result&&refresh()}):uSyncPublishDialogManager.openPublisherPullContent({serverAlias:vm.server.alias,items:vm.selected},function(result){result&&refresh()}):vm.local?uSyncPublishDialogManager.openPublisherPushMedia({items:vm.selected},function(result){result&&refresh()}):uSyncPublishDialogManager.openPublisherPullMedia({serverAlias:vm.server.alias,items:vm.selected},function(result){result&&refresh()})},vm.getFolders=getFolders,vm.clearSelection=clearSelection,vm.onSelected=onSelected,vm.selectionLabel="Pull selection",vm.selectLocal=function(){vm.local=!0,vm.selectionLabel="Push selection",vm.picked=!1,vm.server={name:"local"},vm.servers.forEach(function(server){server.selected=!1}),vm.items={},clearSelection(),vm.pageNum=1,getFolders(vm.rootKey,vm.pageNum)},vm.local=!1,vm.rootKey="00000000-0000-0000-0000-000000000000",vm.isBlank=!1,vm.mode="pull",vm.items={folders:[],nodes:[]},uSyncPublishService.getServers(vm.mode).then(function(result){vm.servers=result.data,vm.servers.forEach(function(server){uSyncPublishService.checkServer(server.alias).then(function(result){server.status=result.data})})}),uSyncPublishService.hasContentOrMedia(!1).then(function(result){vm.isBlank=!result.data}),vm.layouts=[{name:"Grid",icon:"icon-thumbnails-small",path:"gridpath",selected:!0,active:!0},{name:"List",icon:"icon-list",path:"listpath",selected:!0}],"content"===vm.section?(vm.activeLayout=vm.layouts[1],vm.layouts[0].active=!1,vm.layouts[1].active=!0):vm.activeLayout=vm.layouts[0],vm.pageNum=1,vm.onNextPage=function(pageNumber){loadPage(pageNumber)},vm.onPrevPage=function(pageNumber){loadPage(pageNumber)},vm.onChangePage=function(pageNumber){loadPage(pageNumber)},vm.onGotoPage=function(pageNumber){loadPage(pageNumber)},vm.selected=[]})}(),function(){"use strict";angular.module("umbraco").controller("uSyncCacheController",function(overlayService,notificationsService,uSyncCacheService,uSyncSettingManager){var vm=this;function getStatus(set){uSyncCacheService.getStatus(set).then(function(result){vm.status=result.data,vm.enabled=vm.status.enabled})}vm.set="publisher",vm.enabled=!1,vm.showSettings=function(settings){settings={uSync:{Complete:{Caching:{Enabled:settings}}}};uSyncSettingManager.showAppSettings("usyncpublish_cacheSettings","usyncpublish_cacheSettingIntro",JSON.stringify(settings,null,2))},vm.cacheButtonState="init",vm.rebuild=function(){!function(overlay){overlay={view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"overlay/cacheOverlay.html",title:"Rebuild uSync caches",subtitle:"Refresh the uSync publisher caches for greater syncing speed",content:overlay,disableBackdropClick:!0,disableEscKey:!0,submitButtonLabel:"Rebuild",closeButtonLabel:"Close",submit:function(model){model.isRebuilt?(overlayService.close(),getStatus(vm.set)):null!=model.rebuild&&model.rebuild()},close:function(){overlayService.close(),getStatus(vm.set)}};overlayService.open(overlay)}("")},getStatus(vm.set)})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublisherSettingsDefaultController",function($rootScope,$q,$timeout,notificationsService,uSyncPublishService,uSyncPublishDialogManager){var vm=this;vm.loading=!0,vm.settings={},vm.version="",vm.addNew=function(){uSyncPublishDialogManager.openNewServerDialog(null,function(saved){init()})},vm.deploy=deploy,vm.gotoSettings=function(server){uSyncPublishDialogManager.openServerDialog(server.alias,function(saved){init()})},vm.toggleValue=function(value){vm.settings[value]=!vm.settings[value],void 0!==vm.time&&null!=vm.time&&$timeout.cancel(vm.time);vm.time=$timeout(saveSettings,1e3)},vm.copyText=function(){var range=document.createRange();range.selectNode(document.getElementById("serverUrl")),window.getSelection().removeAllRanges(),window.getSelection().addRange(range),document.execCommand("copy"),window.getSelection().removeAllRanges(),notificationsService.success("Copied","Server url copied to clipboard")},vm.addSelf=function(){uSyncPublishDialogManager.openNewServerDialog(null,function(saved){init()},vm.settings.serverUrl)},vm.showHelp=function(title,view){vm.help={title:title,subtitle:"uSync publisher help",view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"/help/"+view+".html",show:!0,hideSubmitButton:!0,submit:function(model){vm.help={}},close:function(model){vm.help={}}}},init();var e=[];function init(){vm.loading=!0;var promises=[];promises.push(uSyncPublishService.getAllServers().then(function(result){vm.servers=result.data,vm.servers.forEach(function(server){server._buttons={defaultButton:{labelKey:"usyncpublish_settings",handler:function(){vm.gotoSettings(server)}},subButtons:[]},uSyncPublishService.checkServer(server.alias).then(function(result){server.status=result.data,server.status.enabled&&(server._buttons.subButtons=[{labelKey:"usyncpublish_deploy",handler:function(){deploy(server)}},{labelKey:"usyncpublish_pullDeploy",handler:function(){!function(server){uSyncPublishDialogManager.openConfigDialog("Pull",server.alias,function(){})}(server)}}])})})})),promises.push(uSyncPublishService.getSettings().then(function(result){vm.settings=result.data})),$q.all(promises).then(function(){vm.loading=!1}),uSyncPublishService.getVersion().then(function(result){vm.version=result.data})}function deploy(server){uSyncPublishDialogManager.openConfigDialog("Push",server.alias,function(){})}function saveSettings(){uSyncPublishService.saveSettings(vm.settings).then(function(result){notificationsService.success("Save","uSync publisher settings saved")},function(error){notificationsService.error("Error",error.data.exceptionMessage)})}e.push($rootScope.$on("usync-publish-server-delete",function(){init()})),e.push($rootScope.$on("usync-publish-server-sort",function(){init()}))})}(),angular.module("umbraco").controller("uSyncPublisherSettingsController",function($scope,notificationsService,uSyncPublishService,uSyncPublishServerManager,uSyncSettingManager){var vm=this;vm.loading=!0,vm.server={},vm.settings={},vm.saveState="init",vm.showAdvanced=!0,vm.save=function(){saveSettings()},vm.reloadSettings=reloadSettings,vm.createKeys=function(){uSyncPublishService.createKeys().then(function(result){vm.saveState="success",uSyncSettingManager.showAppSettings("usyncpublish_securityKey","usyncpublish_createKeyIntro",result.data.json)})},vm.copyText=function(){var copyItem=document.getElementById("serverUrl");copyItem.select(),copyItem.setSelectionRange(0,99999),document.execCommand("copy"),notificationsService.success("Copied","Server url copied to clipboard")},vm.groups=[],vm.userGroupPicker={},uSyncPublishService.getSettings().then(function(result){vm.loading=!1,vm.settings=result.data,vm.server=vm.settings.server,initPicker(),vm.settings.hasAppId||uSyncPublishServerManager.createLocalApiKeys()}),uSyncPublishService.getPublishers().then(function(result){vm.publishers=result.data});var unsubscribe=[];function reloadSettings(quite){vm.loading=!0,vm.saveState="busy",uSyncPublishService.reloadSettings().then(function(result){vm.saveState="success",vm.loading=!1,vm.settings=result.data,initPicker(),quite||notificationsService.add({type:"info",headline:"Reload",message:"Settings reloaded from disk"})})}function saveSettings(){vm.saveState="busy",vm.settings.server=vm.server,uSyncPublishService.saveSettings(vm.settings).then(function(result){vm.saveState="success",notificationsService.success("Save","uSync publisher settings saved")},function(error){vm.saveState="error",notificationsService.error("Error",error.data.ExceptionMessage)})}function initPicker(){vm.userGroupPicker={value:vm.server.sendSettings,view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"pickers/userGroupPicker.html",validation:{mandatory:!1},config:{}},void 0!==vm.server.allowedServers&&null!==vm.server.allowedServers||(vm.settings.allowedServers=[]),vm.allowedPicker={value:vm.server.allowedServers,view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"serverPicker/picker.html",validation:{mandatory:!0},config:{multiPicker:!1}}}unsubscribe.push($scope.$on("usync-publisher-settings-save",function(){saveSettings()})),unsubscribe.push($scope.$on("usync-publisher-settings-reload",function(){reloadSettings(!0)})),$scope.$on("$destroy",function(){for(var u in unsubscribe)unsubscribe[u]()}),(unsubscribe=[]).push($scope.$watch("vm.publisher",function(newValue){var pub;void 0===newValue||null!=(pub=_.find(vm.publishers,function(pub){return pub.alias===newValue}))&&(vm.publisherDescription=pub.description)})),$scope.$on("$destroy",function(){for(var u in unsubscribe)unsubscribe[u]()})}),angular.module("umbraco").controller("uSyncPublisherSyncController",function($scope,$location,$routeParams,notificationsService,uSyncPublishService,uSyncPublishDialogManager){var vm=this;function complete(){}vm.working=!1,vm.servers=[],vm.checkSettings=function(options){options={entity:{id:"-1",items:[{id:"-1",uid:"",name:"ContentType"},{id:"-1",udi:"",name:"DataType"},{id:"-1",udi:"",name:"MediaType"}],server:options,contentType:"settings"}};uSyncPublishDialogManager.openSyncDialog("Deploy Settings","publisher",options,complete,"SettingsPush","")},uSyncPublishService.getAllServers().then(function(result){vm.servers=result.data,vm.servers.forEach(function(server){uSyncPublishService.checkServer(server.alias).then(function(result){server.status=result.data})})})}),function(){"use strict";angular.module("umbraco").controller("uSyncAddServerController",function($rootScope,$scope,notificationsService,uSyncPublishService,uSyncPublishServerManager){var vm=this;function checkServer(){null!=vm.server.url&&(vm.checkState="busy",vm.server.url=vm.server.url.trimEnd("/"),uSyncPublishServerManager.checkServerByUrl(vm.server.url,function(status){"Success"===(vm.status=status).Status?vm.checkState="success":vm.checkState="error",vm.checked=!0,vm.showCheck=!0}))}vm.loading=!1,vm.selected=!1,vm.checked=!1,vm.showCheck=!1,vm.dialog={title:"Add Server",description:"Connect to a new server"},vm.server={name:"",placeholder:$scope.model.placeholder,url:$scope.model.url},void 0!==$scope.model.url&&(vm.server.url=$scope.model.url),vm.checkState="init",vm.close=function(){$scope.model.close&&$scope.model.close()},vm.save=function(){uSyncPublishService.saveServer(vm.server).then(function(result){vm.buttonState="success",notificationsService.success("Saved",vm.server.alias+" server settings have been updated"),$rootScope.$broadcast("usync-publish-serverSave")},function(error){vm.buttonState="error",notificationsService.error("error",error.data.exceptionMessage)}),$scope.model.submit&&$scope.model.submit(vm.server)},vm.select=function(template){vm.templates.forEach(function(t){t.selected=!1}),template.selected=!0,vm.selected=!0,vm.server.icon=template.icon,vm.server.enabled=!0,vm.server.pullEnabled=!0,vm.server.sendSettings=template.flags,vm.server.publisher=template.publisher,vm.server.publisherConfig=template.publisherConfig},vm.nameChange=function(){null!=vm.server.name&&(vm.server.alias=vm.server.name.toUmbracoAlias())},vm.urlChange=function(){vm.showCheck=!1},vm.setupServer=function(){uSyncPublishServerManager.remoteSetup(vm.server,function(success){success&&checkServer()})},vm.checkServer=checkServer,uSyncPublishService.getSettings().then(function(result){vm.settings=result.data,vm.settings.hasAppId||uSyncPublishServerManager.createLocalApiKeys()}),uSyncPublishService.getTemplates().then(function(result){vm.templates=result.data},function(error){})})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublisherDetailChangesController",function($scope,assetsService){var vm=this;function getTypeName(typeName){return typeName.substring(typeName.lastIndexOf(".")+1)}vm.item=$scope.model.item,assetsService.loadJs("lib/jsdiff/diff.min.js",$scope).then(function(){null!=vm.item.details&&vm.item.details.forEach(function(detail,index){let oldValueDiff=null===detail.oldValue?"":detail.oldValue,newValueDiff=null===detail.newValue?"":detail.newValue;detail.oldValueJson instanceof Object&&(oldValueDiff=JSON.stringify(detail.oldValue,null,1)),detail.newValueJson instanceof Object&&(newValueDiff=JSON.stringify(detail.newValue,null,1)),detail.diff=JsDiff.diffWords(oldValueDiff,newValueDiff)})}),vm.close=function(){$scope.model.close&&$scope.model.close()},vm.getTypeName=getTypeName,vm.pageTitle=function(){return vm.item.change+" "+getTypeName(vm.item.itemType)+" "+vm.item.name}})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublisherDetailController",function($scope,$q,eventsService,uSyncPublishService){var vm=this;vm.item=$scope.model.item,vm.server=$scope.model.server,vm.viewFirst=$scope.model.viewFirst,vm.showServers=$scope.model.showServers??!1,vm.hideServerBox=!1,vm.entity=$scope.model.entity,vm.loaded=!vm.showServers,vm.missing=!1,vm.servers=[],vm.selectNavigationItem=function(item){eventsService.emit("usync-publisher-detail.tab.change",item)},vm.page={navigation:[{name:"Detail",alias:"changes",icon:"icon-bulleted-list",view:Umbraco.Sys.ServerVariables.application.applicationPath+"App_Plugins/uSyncPublisher/dialogs/detail.changes.html",active:!0}]},"IContent"!=vm.item.itemType&&"IMedia"!=vm.item.itemType||(vm.page.navigation.push({name:"View",alias:"view",icon:"icon-display",view:Umbraco.Sys.ServerVariables.application.applicationPath+"App_Plugins/uSyncPublisher/dialogs/detail.view.html"}),vm.viewFirst&&(vm.page.navigation[0].active=!1,vm.page.navigation[1].active=!0,eventsService.emit("usync-publisher-detail.tab.change",vm.page.navigation[1]))),vm.close=function(){$scope.model.close&&$scope.model.close()},vm.onSelected=function(server){vm.loaded=!1,$scope.model.server=server,vm.server=server,"IContent"===vm.item.itemType?uSyncPublishService.getContentChanges([vm.entity.udi],server.alias).then(function(result){0<result.data.length?(vm.item=result.data[0].action,$scope.model.item=vm.item,vm.loaded=!0):vm.missing=!0}):"IMedia"===vm.item.itemType&&uSyncPublishService.getMediaChanges([vm.entity.udi],server.alias).then(function(result){0<result.data.length?(vm.item=result.data[0].action,$scope.model.item=vm.item,vm.loaded=!0):vm.missing=!0})},vm.$onInit=function(){vm.showServers&&uSyncPublishService.getServers(vm.mode).then(function(result){var servers,checks;vm.servers=result.data,servers=vm.servers,checks=[],servers.forEach(function(server){checks.push(uSyncPublishService.checkServer(server.alias).then(function(result){server.status=result.data}))}),$q.all(checks).then(function(){$scope.$broadcast("usync-servers-checked",servers),1===vm.servers.length&&(vm.hideServerBox=!0)})})}})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublisherDetailViewController",function($scope,$sce,eventsService,uSyncPublishService){var vm=this;vm.loaded=!1,vm.loading=!0,vm.item=$scope.model.item,vm.server=$scope.model.server,vm.viewFirst=$scope.model.viewFirst,vm.entity={},vm.isContent="IMedia"!=vm.item.itemType;var evts=[];function loadView(){vm.loaded=!0,vm.isContent?uSyncPublishService.getContentEntity(vm.item.key,vm.server.alias).then(function(result){vm.entity=result.data,vm.localUrl=$sce.trustAsResourceUrl(vm.entity.local.localUrl),vm.remoteUrl=$sce.trustAsResourceUrl(vm.entity.remote.remoteUrl),vm.loading=!1}):uSyncPublishService.getMediaEntity(vm.item.key,vm.server.alias).then(function(result){vm.entity=result.data,vm.localUrl=$sce.trustAsResourceUrl(vm.entity.local.localUrl),vm.localMedia=JSON.parse(vm.entity.local.mediaProperty),vm.remoteUrl=$sce.trustAsResourceUrl(vm.entity.remote.remoteUrl),vm.remoteMedia=JSON.parse(vm.entity.remote.mediaProperty),vm.loading=!1})}!vm.loaded&&vm.viewFirst&&loadView(),evts.push(eventsService.on("usync-publisher-detail.tab.change",function(){vm.loaded||loadView()})),$scope.$on("$destroy",function(){for(var e in evts)eventsService.unsubscribe(evts[e])})})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublisherDialogController",function($scope){var vm=this;vm.close=function(){$scope.$broadcast("usync-publish-close"),vm.state.complete&&$scope.model.submit?$scope.model.submit():$scope.model.close&&$scope.model.close()},vm.performAction=function(){$scope.$broadcast("usync-publish-performAction")},vm.showItems=function(){return!vm.hideItems&&1<vm.items.length},vm.mode=$scope.model.mode,vm.options=$scope.model.options,vm.items=vm.options.items,vm.single=$scope.model.single,vm.hideItems=vm.options.hideItems??!1,vm.state={complete:!1,loading:!0,hideClose:!1,valid:!1,working:!1,hasError:!1,error:""},vm.ui={button:{state:"init",name:"Send"},headings:{title:"uSyncPublisher",description:"push and pull things",boxTitle:"uSyncPublisher_box",boxDescription:"uSyncPublisher_box_desc"}},vm.actionButton={state:"init",name:"Send",valid:!1}})}(),function(){"use strict";angular.module("umbraco").controller("uSyncSideBySideController",function($scope,$sce){this.source=$sce.trustAsResourceUrl($scope.model.source),this.target=$sce.trustAsResourceUrl($scope.model.target),this.close=function(){$scope.model.close&&$scope.model.close()}})}(),function(){"use strict";angular.module("umbraco").controller("uSyncCacheOverlayController",function($scope,$q,notificationsService,uSyncDependencyManager,uSyncCacheService){var vm=this;vm.rebuilding=!1,$scope.model.rebuilt=!1,$scope.model.rebuild=function(){$scope.model.disableSubmitButton=!0,$scope.model.submitButtonState="busy",vm.rebuilding=!0,vm.error="";var i=0;function processRebuild(itemType){!function(offset){offset=vm.offset-75*offset;vm.offsetStyle={transform:"translateX("+offset+"px)"}}(i),vm.cacheTypes[i].active=!0,i++,function(itemType){return $q(function(resolve,reject){vm.status={Title:"Rebuilding "+itemType.name,Icon:itemType.icon,Message:"Collecting items",Progress:0},uSyncCacheService.getAllUdis(itemType.type).then(function(batches){batches=uSyncDependencyManager.createBatches(batches.data,10);!function(entityType,batches){return $q(function(resolve,reject){var i=0;!function process(items){i++;vm.status.Message="Processing batch "+i+" of "+batches.length;vm.status.Progress=i/batches.length*100;uSyncCacheService.cacheItems(entityType,"publisher",items).then(function(result){i<batches.length?process(batches[i]):(vm.status.Message="Complete",resolve())},function(error){reject(error)})}(batches[i])})}(itemType.type,batches).then(function(result){resolve()},function(error){reject(error)})})})}(itemType).then(function(result){i<vm.cacheTypes.length?(vm.cacheTypes[i-1].active=!1,processRebuild(vm.cacheTypes[i])):(uSyncCacheService.flush("publisher").then(function(){},function(error){notificationsService.error("error","unable to save cache to disk, check logs")}),$scope.model.closeButtonLabel="Done",$scope.model.rebuilt=!0,$scope.model.hideSubmitButton=!0)},function(error){notificationsService.error("error","there where problems rebuilding the cache")})}uSyncCacheService.clearCaches("publisher").then(function(){processRebuild(vm.cacheTypes[0])})},$scope.model.submitButtonLabel="rebuild",vm.status={Title:"Rebuilding uSync Caches",Message:"Collecting items",Progress:0},vm.offset=230,vm.offsetStyle={transform:"translateX("+vm.offset+"px)"},vm.batchSize=25,vm.cacheTypes=[{name:"Data types",type:"data-type",icon:"icon-autofill",active:!0},{name:"Content Types",type:"document-type",icon:"icon-item-arrangement"},{name:"Media Types",type:"media-type",icon:"icon-thumbnails"},{name:"Content",type:"document",icon:"icon-document color-orange"},{name:"Media",type:"media",icon:"icon-picture color-green"}]})}(),function(){"use strict";angular.module("umbraco").run(function(eventsService,uSyncPublishOverlayManager){function update(content){uSyncPublishOverlayManager.insertPublishCmds(content)}eventsService.on("app.tabChange",function(evt,data){update(data.content)}),eventsService.on("content.loaded",function(evt,data){update(data.content)}),eventsService.on("content.newReady",function(evt,data){update(data.content)}),eventsService.on("content.saved",function(evt,data){update(data.content)})})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublishOverlayController",function($scope,uSyncItemManager){var vm=this;$scope.model.moveToNext=function(){$scope.$broadcast("usync-publish-performAction")},$scope.model.isComplete=function(){return vm.state.isComplete};var model=$scope.model;vm.mode=model.mode,vm.isSingle=!0,vm.options=$scope.model.options,vm.items=vm.options.items,vm.server=model.server,vm.headings={},vm.stepArgs={stepAlias:"",target:"",options:"",clientId:""},vm.state={complete:!1,loading:!0,hideClose:!0,valid:!1,working:!1,hasError:!1,error:""},vm.actionButton={state:"init",name:"Send"};var evts=[];evts.push($scope.$watch("vm.state",function(state){void 0!==state&&(state.complete?($scope.model.closeButtonLabel="Done",$scope.model.hideSubmitButton=!0):state.working?$scope.model.hideSubmitButton=!0:$scope.model.hideSubmitButton=!1,$scope.model.disableSubmitButton=!state.valid)},!0)),evts.push($scope.$watch("vm.headings",function(headings){void 0!==headings&&(void 0!==headings.title&&($scope.model.title=headings.title),void 0!==headings.description&&($scope.model.subtitle=headings.description))},!0)),$scope.$on("$destroy",function(){for(var x in evts)evts[x]()}),$scope.model.disableSubmitButton=!0})}(),function(){"use strict";angular.module("umbraco").factory("uSyncPublishOverlayManager",function($rootScope,overlayService,uSyncItemManager){var mgr={};return{insertPublishCmds:function(button){void 0!==button&&(mgr.content=button);{var formScope;null==angular.element(document).find('[name="contentForm"]')||null!=(formScope=function findScope(scope){if(!scope)return null;var contentScope=null;if(void 0!==scope.subButtons&&void 0!==scope.content)return scope;null!==scope.$$childHead&&(contentScope=findScope(scope.$$childHead));null===contentScope&&null!==scope.$$nextSibling&&(contentScope=findScope(scope.$$nextSibling));return contentScope}($rootScope))&&_.contains(formScope.content.allowedActions,"^")&&null!==formScope.subButtons&&(_.some(formScope.subButtons,function(b){return"SYNCPUB"==b.letter})||(button={letter:"SYNCPUB",labelKey:"usyncpublish_publishButton",handler:publishToSite,alias:"usyncSitePublish",addEllipsis:"true"},formScope.subButtons.splice(1,0,button)))}}};function publishToSite(){var treeItem={id:mgr.content.id,treeAlias:"content",sectionAlias:"content"};uSyncItemManager.getEntity(treeItem).then(function(result){!function(overlay){overlay={title:"Publish to server...",subtitle:"Select which server you wish to publish the content to",view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"overlay/overlayDialog.html",isModal:!0,mode:"Push",server:{},options:overlay,disableBackdropClick:!0,disableEscKey:!0,skipFormValidation:!0,disableSubmitButton:!0,submitButtonLabel:"Continue",closeButtonLabel:"Close",submit:function(){null!=this.isComplete&&this.isComplete()?($scope.$broadcast("usync-publish-close"),overlayService.close()):null!=this.moveToNext&&this.moveToNext()},close:function(){overlayService.close()}};overlayService.open(overlay)}({items:[result.data],treeItem:treeItem})})}})}(),function(){"use strict";angular.module("umbraco").controller("usyncUserGroupPickerController",function($scope,editorService,uSyncPublishService,userService){var vm=this;function syncGroupList(){var list=[];vm.groups.forEach(function(group,index){list.push(group.alias)}),vm.value=list,$scope.model.value.groups=vm.value}vm.remove=function(group){for(let i=0;i<vm.groups.length;i++)if(vm.groups[i].alias===group.alias){vm.groups.splice(i,1);break}syncGroupList()},vm.open=function(){var options=[];angular.copy(vm.groups,options);options={selection:options,submit:function(model){model.selection&&(vm.groups=model.selection,syncGroupList()),editorService.close()},close:function(){editorService.close()}};editorService.userGroupPicker(options)},vm.loading=!0,vm.readonly=!0,vm.groups=[],vm.value=$scope.model.value.groups,vm.value||(vm.value=[]),vm.groups=[],uSyncPublishService.getUserGroups().then(function(result){var userGroups=result.data;vm.value.forEach(function(userGroup,index){userGroup=_.where(userGroups,{alias:userGroup});null!==userGroup&&1===userGroup.length&&vm.groups.push(userGroup[0])}),vm.loading=!1}),userService.getCurrentUser().then(function(currentUser){vm.readonly=!currentUser.allowedSections.includes("users")})})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublisherRemoteOverlayController",function($scope){this.server=$scope.model.server,this.togglePassword=function(){var elem=$("form[name='usyncremoteserver'] input[name='password']");elem.attr("type","text"===elem.attr("type")?"password":"text"),elem.focus(),$(".password-text.show, .password-text.hide").toggle()},$scope.model.disableSubmitButton=!1})}(),angular.module("umbraco").controller("usyncSyncSetupController",function($scope,uSyncPublishService){var vm=this;function checkSelection(){$scope.model.servers=[];for(let s=0;s<vm.servers.length;s++)!0===vm.servers[s].selected&&$scope.model.servers.push(vm.servers[s].alias);0<$scope.model.servers.length?$scope.model.disableSubmitButton=!1:$scope.model.disableSubmitButton=!0}vm.servers=[],vm.selectServer=function(server){$scope.model.busy||void 0!==server.status&&!0===server.status.enabled&&(server.selected=!server.selected,checkSelection())},uSyncPublishService.getAllServers().then(function(result){vm.servers=result.data,vm.servers.forEach(function(server){uSyncPublishService.checkServer(server.alias).then(function(result){server.status=result.data,!0===server.status.enabled&&(server.selected=!0,checkSelection())})})})}),function(){"use strict";angular.module("umbraco").factory("uSyncActionManager",function($q){return{initFlags:function(){return{includeAncestors:{toggle:!1,value:!1},includeChildren:{toggle:!0,value:!0},includeDecendants:{toggle:!1,value:!0},deleteMissing:{toggle:!0,value:!1},includeDependencies:{toggle:!1,value:!1},includeFiles:{toggle:!1,value:!1},includeMedia:{toggle:!0,value:!0},includeMediaFiles:{toggle:!1,value:!1},includeLinked:{toggle:!0,value:!1},includeConfig:{toggle:!1,value:!0}}},prepToggles:function(op,flags,contentType){op=op.sendSettings;void 0!==op&&(flags.includeAncestors=setToggle(op.includeAncestors),flags.includeChildren=setToggle(op.includeChildren),flags.includeDecendants=setToggle(op.includeDecendants),flags.deleteMissing=setToggle(op.deleteMissing),flags.includeDependencies=setToggle(op.includeDependencies),flags.includeFiles=setToggle(op.includeFiles),flags.includeMedia=setToggle(op.includeMedia),flags.includeMediaFiles=setToggle(op.includeMediaFiles),flags.includeLinked=setToggle(op.includeLinked),flags.includeConfig=setToggle(op.includeConfig),"media"===contentType&&(flags.includeMedia={toggle:!1,value:!0},flags.includeAncestors={toggle:!1,value:!0},flags.includeFiles={toggle:!1,value:!1},flags.includeLinked={toggle:!1,value:!1}));return flags},hasStepActions:function(action){for(let n=0;n<action.Steps.length;n++)if(1==action.Steps[n].IsAction)return!0;return!1},getDialogTitle:function(action){return action.Name},getActionMessage:function(action){return{title:action.Name,Steps:action.Steps}},getDescription:function(mode,contentType,serverName){return function(string){return string.charAt(0).toUpperCase()+string.slice(1)}(("SettingsPush"===mode?"Push":mode)+" "+contentType+("pull"===mode?" from ":" to ")+serverName)},emptyGuid:"00000000-0000-0000-0000-000000000000",mergeResults:function(source,target){if(null==source)return target;null==target&&(target=[]);for(let i=0;i<source.length;i++){var indexOfAction=_.findWhere(target,{key:source[i].key});void 0!==indexOfAction?"NoChange"!==source[i].change&&"Import"!==source[i].change&&(indexOfAction=_.indexOf(target,indexOfAction),target[indexOfAction]=source[i]):target.push(source[i])}return target},mergeDependencies:function(source,target){if(null==source)return target;null==target&&(target=[]);for(let i=0;i<source.length;i++){var index=_.findWhere(target,{Udi:source[i].Udi});void 0!==index?(index=_.indexOf(target,index),target[index]=source[i]):target.push(source[i])}return target}};function setToggle(value){return void 0!==value&&value.startsWith("user")?{toggle:!0,value:value.endsWith("yes")}:{toggle:!1,value:"yes"===value}}})}(),function(){"use strict";angular.module("umbraco").factory("uSyncPublishDialogManager",function($rootScope,$timeout,entityResource,editorService,navigationService,uSyncItemManager){var emptyGuid="00000000-0000-0000-0000-000000000000";return{openPublisherPushContent:function(options,cb){openSyncDialog("Publish Content","publisherDialog",options,cb,"push")},openPublisherPullContent:function(options,cb){openSyncDialog("Pull Content","publisherDialog",options,cb,"pull")},openPublisherPushMedia:function(options,cb){openSyncDialog("Publish Media","publisherDialog",options,cb,"push")},openPublisherPullMedia:function(options,cb){openSyncDialog("Pull Media","publisherDialog",options,cb,"pull")},openPublisherPushItemDialog:function(options,cb){openSyncDialog("Push settings","publisherDialog",options,cb,"settingsPush")},openPublisherPullItemDialog:function(options,cb){openSyncDialog("Pull settings","publisherDialog",options,cb,"settingsPull")},openPublisherPushFileDialog:function(options,cb){openSyncDialog("Push Files","publisherDialog",options,cb,"filePush")},openPublisherPullFileDialog:function(options,cb){openSyncDialog("Pull Files","publisherDialog",options,cb,"filePull")},openConfigDialog:function(mode,server,callback){openDialog("Deploy Settings","publisherDialog",{hideItems:!0,serverAlias:server,items:[{udi:"umb://document-type/"+emptyGuid,name:"ContentType"},{udi:"umb://data-type/"+emptyGuid,name:"DataType"},{udi:"umb://media-type/"+emptyGuid,name:"MediaType"}]},callback,"config"+mode)},openSyncDialog:openSyncDialog,openServerDialog:openServerDialog,openNewServerDialog:function(entity,cb,url=""){editorService.open({view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"dialogs/addServer.html",title:"Add Server",size:"small",url:url,placeholder:0==url.length?"Server name":"name for this server",submit:function(model){editorService.close(),navigationService.hideNavigation(),openServerDialog(model.alias,cb)},close:function(){editorService.close(),navigationService.hideNavigation(),void 0!==cb&&cb(!1)}})},openCompareContent:function(options,cb){entityResource.getById(options.entity.id,"Document").then(function(entity){openCompare(entity,"IContent",cb)})},openCompareMedia:function(options,cb){entityResource.getById(options.entity.id,"Media").then(function(entity){openCompare(entity,"IMedia",cb)})}};function openSyncDialog(dialogTitle,dialogView,options,cb,mode,size="small"){var localItem,dialogOptions;void 0!==options.entity&&(options.items=[options.entity]),1===options.items.length?(localItem=function(options){return void 0!==options.action&&void 0!==options.action.metaData&&null!==options.action.metaData?JSON.parse(options.action.metaData._syncLocalItem):options.items[0]}(options),(dialogOptions=Object.assign({},options)).items=[localItem],openDialog(dialogTitle,dialogView,dialogOptions,cb,mode,size)):openDialog(dialogTitle,dialogView,options,cb,mode,size)}function openDialog(dialogTitle,dialogView,options,cb,mode,size){editorService.open({options:options,mode:mode,single:1===options.items.length,title:dialogTitle,size:size,view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"dialogs/"+dialogView+".html",submit:function(done){editorService.close(),navigationService.hideNavigation(),void 0!==cb&&cb(!0)},close:function(){editorService.close(),navigationService.hideNavigation(),void 0!==cb&&cb(!1)}})}function openServerDialog(alias,cb){editorService.open({serverAlias:alias,title:"Server View",view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"backoffice/uSyncPublisher/server.html",submit:function(done){$rootScope.$broadcast("usync-publisher-settings-reload"),navigationService.hideNavigation(),editorService.close(),void 0!==cb&&cb(!0)},close:function(){$rootScope.$broadcast("usync-publisher-settings-reload"),navigationService.hideNavigation(),editorService.close(),void 0!==cb&&cb(!1)}})}function openCompare(entity,type,cb){editorService.open({title:"Compare remote",view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"dialogs/detail.html",entity:entity,viewFirst:!0,item:{itemType:type},showServers:!0,close:function(){editorService.close(),navigationService.hideNavigation(),void 0!==cb&&cb(!1)}})}})}(),function(){"use strict";angular.module("umbraco").factory("uSyncPublishServerManager",function(overlayService,notificationsService,uSyncPublishService){return{checkServer:function(alias,showSuccessBar,callback){uSyncPublishService.checkServer(alias).then(function(result){showSuccessBar&&notificationsService.success("Connected","Server connection setup"),callback&&callback(result.data)},function(error){notificationsService.error("error",error.data.exceptionMessage),callback&&callback(null)})},checkServerByUrl:function(url,callback){uSyncPublishService.checkServerUrl(url).then(function(result){callback&&callback(result.data)},function(error){callback&&callback({Status:"Error",Message:error.data.ExceptionMessage})})},createLocalApiKeys:function(){var overlay={title:"Generate security keys",subtitle:"Generate a required security id and key",view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"remote/setupkeys.html",isModal:!0,showResult:!1,busy:!1,disableBackdropClick:!0,disableEscapeKey:!0,skipFormValidation:!0,submitButtonLabel:"Generate security key config",closeButtonLabel:"Not now",submit:function(model){uSyncPublishService.createKeys().then(function(result){model.result=result.data,model.hideSubmitButton=!0,model.closeButtonLabel="Close",model.showResult=!0},function(error){notificationsService.error("Error","Unable to setup server"),overlayService.close()})},close:function(){overlayService.close()}};overlayService.open(overlay)},remoteSetup:function(overlay,callback){overlay={title:"Setup "+overlay.name,subtitle:"Setup API connection to "+overlay.url,view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"remote/remoteOverlay.html",server:overlay,isModal:!0,busy:!1,disableBackdropClick:!0,disableEscKey:!0,skipFormValidation:!0,disableSubmitButton:!0,submitButtonLabel:"Continue",closeButtonLabel:"Close",submit:function(model){model.busy=!0,uSyncPublishService.setupServer(model.server.alias,model.server.url,model.username,model.password).then(function(result){result.data.Success?(notificationsService.success("Success",result.data.message),overlayService.close(),callback&&callback(result.data.success)):(model.busy=!1,model.showError=!0,model.error=result.data.message)},function(error){notificationsService.error("Error","Unable to setup server"),callback&&callback(!1),overlayService.close()})},close:function(){overlayService.close()}};overlayService.open(overlay)},syncSettings:function(callback){var overlay={title:"Sync Settings",subtitle:"Syncronize publisher settings between servers",view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"remote/syncSetup.html",isModal:!0,servers:[],busy:!1,disableBackdropClick:!0,disableEscKey:!0,disableSubmitButton:!0,skipFormValidation:!0,submitButtonLabel:"Syncronize",closeButtonLabel:"Close",submit:function(model){model.busy=!0,0<model.servers.length&&uSyncPublishService.syncSettings(model.servers).then(function(result){overlayService.close(),callback&&callback(result.data.success),result.data.success?notificationsService.success("Success","Server settings synced"):(notificationsService.warning("Sync Issue","One or more servers failed to sync - see browser console for details"),console.warn("Sync Failures: ",result.data.servers))},function(error){notificationsService.error("Error","Unable to setup server"),console.error("sync error",error),callback&&callback(!1),overlayService.close()})},close:function(){overlayService.close()}};overlayService.open(overlay)}}})}(),function(){"use strict";angular.module("umbraco").controller("publisherServerSettingsController",function($scope){var vm=this;vm.model=$scope.model,vm.server=$scope.model.server,vm.allowedPicker=vm.model.allowedPicker,vm.userGroupPicker=vm.model.userGroupPicker,vm.hasContent=function(){return-1!=vm.server.sendSettings.includeChildren.indexOf("yes")},vm.hasSettings=function(){return-1!=vm.server.sendSettings.includeDependencies.indexOf("yes")},vm.hasFiles=function(){return-1!=vm.server.sendSettings.includeFiles.indexOf("yes")},vm.toggleContent=function(){-1==vm.server.sendSettings.includeChildren.indexOf("yes")?(vm.server.sendSettings.includeChildren="user-yes",vm.server.sendSettings.deleteMissing="user-yes",vm.server.sendSettings.includeMedia="yes"):(vm.server.sendSettings.includeChildren="no",vm.server.sendSettings.deleteMissing="no",vm.server.sendSettings.includeMedia="no")},vm.toggleSettings=function(){-1==vm.server.sendSettings.includeDependencies.indexOf("yes")?(vm.server.sendSettings.includeDependencies="yes",vm.server.sendSettings.includeConfig="yes"):(vm.server.sendSettings.includeDependencies="no",vm.server.sendSettings.includeConfig="no")},vm.toggleFiles=function(){-1==vm.server.sendSettings.includeFiles.indexOf("yes")?vm.server.sendSettings.includeFiles="yes":vm.server.sendSettings.includeFiles="no"}})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublisherServerPickerController",function($scope,editorService){var vm=this;vm.loaded=!1,vm.value=$scope.model.value,vm.open=function(){var options={title:"Server Picker",view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"serverPicker/serverPickerDialog.html",size:"small",submit:function(options){editorService.close(),void 0!==options&&vm.value.push(options)},close:function(){editorService.close()}};editorService.open(options)},vm.remove=function(server){for(let i=0;i<vm.value.length;i++)if(vm.value[i].alias===server.alias){vm.value.splice(i,1);break}},vm.sortOptions={axis:"y",containment:"parent",distance:10,opacity:.7,tolerance:"pointer",scroll:!0,cursor:"move",zIndex:6e3},vm.loaded=!0})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublishServerpickerDialogController",function($scope,uSyncPublishService){var vm=this;vm.loading=!0,vm.server={},vm.selectedServer=null,vm.options={alias:"",icon:"",push:!0,pull:!0,name:""},vm.submit=function(){$scope.model.submit&&$scope.model.submit(vm.options)},vm.close=function(){$scope.model.close&&$scope.model.close()},vm.select=function(server){vm.selectedServer=server,vm.options.alias=server.alias,vm.options.name=server.name,vm.options.icon=server.icon},vm.valid=function(){return null!==vm.selectedServer&&(!1!==vm.options.pull||!1!==vm.options.push)},uSyncPublishService.getAllServers().then(function(result){vm.servers=result.data,vm.loading=!1})})}(),function(){"use strict";angular.module("umbraco").factory("uSyncCacheService",function($http){var cacheService=Umbraco.Sys.ServerVariables.uSyncComplete.cacheService;return{getStatus:function(set){return $http.get(cacheService+"GetCacheStatus?set="+set)},toggleCaches:function(enabled,set){return $http.post(cacheService+"ToggleCaches?enabled="+enabled+"&set="+set)},clearCaches:function(set){return $http.post(cacheService+"ClearCaches?set="+set)},getAllUdis:function(type){return $http.get(cacheService+"GetAllUdis?type="+type)},cacheItems:function(type,set,udis){return $http.post(cacheService+"CacheItems?type="+type+"&set="+set,udis)},flush:function(set){return $http.post(cacheService+"Flush?set="+set)}}})}(),function(){"use strict";angular.module("umbraco").factory("uSyncPublishService",function($http){var publishService=Umbraco.Sys.ServerVariables.uSyncPublisher.publishService,dependencyFlags_includeChildren=2,dependencyFlags_includeAncestors=4,dependencyFlags_includeDependencies=8,dependencyFlags_includeFiles=16,dependencyFlags_includeMedia=32,dependencyFlags_includeLinked=64,dependencyFlags_includeMediaFiles=128,dependencyFlags_includeConfig=256;return{getServers:function(action){return $http.get(publishService+"GetServers/?action="+action)},getServer:function(alias){return $http.get(publishService+"GetServer/?alias="+alias)},getServerByUrl:function(url){return $http.get(publishService+"GetServerByUrl/?url="+url)},getAllServers:function(){return $http.get(publishService+"GetAllServers/?enabledOnly="+!1)},checkServer:function(alias){return $http.get(publishService+"CheckServer/?server="+alias)},checkServerUrl:function(url){return $http.get(publishService+"CheckServerUrl/?url="+url)},getPublishers:function(){return $http.get(publishService+"GetPublishers")},saveServer:function(server){return $http.post(publishService+"SaveServer",server)},deleteServer:function(alias){return $http.delete(publishService+"DeleteServer/?server="+alias)},setupServer:function(alias,url,user,pass){return $http.post(publishService+"setupServer",{server:alias,url:url,username:user,password:pass})},syncSettings:function(servers){return $http.post(publishService+"SyncSettings",{servers:servers})},getMediaFolders:function(key,server,page){return $http.get(publishService+"GetMediaFolders?id="+key+"&server="+server+"&page="+page)},getContentFolders:function(key,server,page){return $http.get(publishService+"GetContentFolders?id="+key+"&server="+server+"&page="+page)},getLocalContentFolders:function(key,page){return $http.get(publishService+"GetLocalContentFolders?id="+key+"&page="+page)},getLocalMediaFolders:function(key,page){return $http.get(publishService+"GetLocalMediaFolders?id="+key+"&page="+page)},getContentChanges:function(ids,server){return $http.post(publishService+"CalculateContentChanges/?server="+server,ids)},getMediaChanges:function(ids,server){return $http.post(publishService+"CalculateMediaChanges/?server="+server,ids)},getContentEntity:function(key,server){return $http.get(publishService+"GetContentEntity?id="+key+"&server="+server)},getMediaEntity:function(key,server){return $http.get(publishService+"GetMediaEntity?id="+key+"&server="+server)},getSettings:function(){return $http.get(publishService+"GetSettings")},saveSettings:function(settings){return $http.post(publishService+"SaveSettings",settings)},reloadSettings:function(){return $http.get(publishService+"ReloadSettings")},getVersion:function(){return $http.get(publishService+"GetVersion")},createKeys:function(){return $http.get(publishService+"CreateKeys")},getUserGroups:function(){return $http.get(publishService+"GetUserGroups")},setServerOrder:function(order){return $http.post(publishService+"SetServerOrder",order)},getDecendentCount:function(id){return $http.get(publishService+"DecendentCount?id="+id)},getFlags:function(options){var flags=0;options.includeChildren.value&&(flags|=dependencyFlags_includeChildren);options.includeAncestors.value&&(flags|=dependencyFlags_includeAncestors);options.includeDependencies.value&&(flags|=dependencyFlags_includeDependencies);options.includeFiles.value&&(flags|=dependencyFlags_includeFiles);options.includeMedia.value&&(flags|=dependencyFlags_includeMedia);options.includeLinked.value&&(flags|=dependencyFlags_includeLinked);options.includeMediaFiles&&(flags|=dependencyFlags_includeMediaFiles);options.includeConfig?.value&&(flags|=dependencyFlags_includeConfig);return flags},getTemplates:function(){return $http.get(publishService+"GetTemplates")},hasContentOrMedia:function(checkEnabled){return $http.get(publishService+"HasContentOrMedia?checkEnabled="+checkEnabled)}}})}(),function(){"use strict";angular.module("umbraco").factory("uSyncPublishingService",function($http){var serviceRoot=Umbraco.Sys.ServerVariables.uSyncPublisher.publisherService;return{getAction:function(request){return $http.post(serviceRoot+"GetAction",request)},performAction:function(request){return $http.post(serviceRoot+"PerformAction",request)},clean:function(id,server){return $http.delete(serviceRoot+`clean/?id=${id}&server=`+server)}}})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublisherDashboardController",function($timeout,$rootScope,navigationService,overlayService,uSyncPublishService,uSyncPublishServerManager){var vm=this;vm.selectItem=function(item){vm.page.title=title,vm.page.description=item.description,"Publisher"!==item.name&&(vm.page.title+=" - "+item.name)};var title="uSync Publisher",description="Push and pull content from other Umbraco installations";vm.page={title:title,description:description,version:Umbraco.Sys.ServerVariables.uSyncPublisher.dllVersion,navigation:[{name:"Publisher",alias:"publisher",icon:"icon-truck",description:description,view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"dashboard/default.html",active:!0},{name:"Advanced",description:"Default settings used as a base for all servers in config",alias:"settings",icon:"icon-settings",view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"dashboard/settings.html"},{name:"Cache",description:"Caching dependencies and exports make publishing faster",alias:"cache",icon:"icon-flash",view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"dashboard/cache.html"},{name:"Sync",description:"Quickly get this install in sync with another server",alias:"sync",icon:"icon-infinity",view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"dashboard/blank.html"}]},$timeout(function(){navigationService.syncTree({tree:"uSyncPublisher",path:"-1"})}),vm.save=function(){$rootScope.$broadcast("usync-publisher-settings-save")},vm.sync=function(){uSyncPublishServerManager.syncSettings(function(success){})},vm.getJson=function(){uSyncPublishService.getAllServers().then(function(options){options=options.data,options={view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"dashboard/serverjson.html",title:"Server config",content:JSON.stringify(options,null,4),docslink:vm.docslink,disableBackdropClick:!0,disableEscKey:!0,hideSubmitButton:!0,submit:function(){overlayService.close()}};overlayService.confirm(options)})}})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublishDeleteController",function($rootScope,$scope,treeService,navigationService,notificationsService,uSyncPublishService){var vm=this;vm.alias=$scope.currentNode.id,vm.cancel=function(){navigationService.hideDialog()},vm.performDelete=function(){uSyncPublishService.deleteServer(vm.alias).then(function(result){treeService.getTreeRoot($scope.currentNode);treeService.removeNode($scope.currentNode),navigationService.hideMenu(),notificationsService.success("deleted","Server has been removed"),$rootScope.$broadcast("usync-publish-server-delete")})}})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublisherServerSettingsController",function($scope,$routeParams,$timeout,$http,$rootScope,navigationService,notificationsService,localizationService,uSyncPublishService,uSyncPublishDialogManager,uSyncPublishServerManager){var vm=this;vm.loading=!0,vm.checked=!1,vm.showClose=!1,vm.showAdvanced=!0,vm.errorDesc="",vm.selectItem=function(item){};var pluginPath=Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath;function Init(){uSyncPublishService.getSettings().then(function(result){vm.settings=result.data,vm.settings.hasAppId||uSyncPublishServerManager.createLocalApiKeys()}),uSyncPublishService.getPublishers().then(function(result){vm.publishers=result.data});var serverAlias=$routeParams.id;null!=$scope.model&&(serverAlias=$scope.model.serverAlias,vm.showClose=!0),vm.alias!==serverAlias&&(vm.alias=serverAlias,"-1"!==vm.alias&&uSyncPublishService.getServer(vm.alias).then(function(result){vm.server=result.data,vm.server||(vm.server={}),function(){void 0!==vm.server.allowedServers&&null!==vm.server.allowedServers&&0!==vm.server.allowedServers.length||(vm.server.allowedServers=[]);vm.allowedPicker={value:vm.server.allowedServers,view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"serverPicker/picker.html",validation:{mandatory:!0},config:{multiPicker:!1}},vm.userGroupPicker={value:vm.server.sendSettings,view:Umbraco.Sys.ServerVariables.uSyncPublisher.pluginPath+"pickers/userGroupPicker.html",validation:{mandatory:!1},config:{}}}(),checkServer(!1),vm.loading=!1},function(error){notificationsService.error("Error",error.data.ExceptionMessage)}))}function checkServer(showSuccessBar){vm.checked=!0,vm.checkStatus="busy",vm.status={},uSyncPublishServerManager.checkServer(vm.server.alias,showSuccessBar,function(status){null!=(vm.status=status)?(vm.checkStatus="success",vm.checkStatusButton=status,vm.saved=!1,$timeout(()=>{vm.checked=!1},3500)):(function(status){console.log("getServerError",status),status.enabled||localizationService.localize("usyncpublish_error_"+status.status.toLowerCase()).then(function(value){value.startsWith("[")&&value.endsWith("]")?vm.errorDesc=status.status:vm.errorDesc=value})}(status),vm.checkStatus="error")})}function deploy(){uSyncPublishDialogManager.openConfigDialog("Push",vm.server.alias,function(){})}function pullDeploy(){uSyncPublishDialogManager.openConfigDialog("Pull",vm.server.alias,function(){})}vm.page={title:"[Server name]",description:"[Server description]",navigation:[{name:"Server",alias:"settings",icon:"icon-server",description:"Settings",view:pluginPath+"server/settings.html",active:!0},{name:"Permissions",alias:"permissions",icon:"icon-combination-lock",description:"a",view:pluginPath+"server/permissions.html"},{name:"Advanced",alias:"advanced",icon:"icon-settings-alt",description:"b",view:pluginPath+"server/advanced.html"}]},vm.buttonState="init",vm.checkStatus="init",vm.checkStatusButton="Check access",vm.status={enabled:!1},vm.server={id:"",sendSettings:{groups:["admin","editor"]},icon:"icon-server",allowedServers:[]},vm.syncbuttons={defaultButton:{labelKey:"usyncpublish_deploy",handler:deploy},subButtons:[{labelKey:"usyncpublish_pullDeploy",handler:pullDeploy}]},vm.save=function(){vm.saved=!1,vm.buttonState="busy",uSyncPublishService.saveServer(vm.server).then(function(result){vm.buttonState="success",notificationsService.success("Saved",vm.server.alias+" server settings have been updated"),navigationService.syncTree({tree:"uSyncPublisher",path:["-1",vm.server.alias],forceReload:!0}),vm.saved=!0,vm.checked=!1,$rootScope.$broadcast("usync-publish-serverSave"),checkServer(!1),Init()},function(error){vm.buttonState="error",notificationsService.error("error",error.data.exceptionMessage)})},vm.close=function(){$scope.model.close&&$scope.model.close()},vm.checkServer=checkServer,vm.deploy=deploy,vm.pullDeploy=pullDeploy,vm.remoteSetup=function(server){uSyncPublishServerManager.remoteSetup(server,function(success){checkServer(!1),vm.checked=!0})},$timeout(function(){vm.showClose||navigationService.syncTree({tree:"uSyncPublisher",path:vm.alias})}),Init();var unsubscribe=[];unsubscribe.push($scope.$watch("vm.server.Publisher",function(newValue){var pub;void 0===newValue||null!=(pub=_.find(vm.publishers,function(pub){return pub.alias===newValue}))&&(vm.publisherDescription=pub.description)})),$scope.$on("$destroy",function(){for(var u in unsubscribe)unsubscribe[u]()})})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublisherServerSortController",function($scope,$rootScope,navigationService,notificationsService,uSyncPublishService){var vm=this;vm.loading=!0,vm.sortOrder={},vm.servers=[],vm.sortableOptions={distance:10,tolerance:"pointer",opacity:.7,scroll:!0,cursor:"move",helper:function(e,ui){return ui.children().each(function(){$(this).width($(this).width())}),ui},update:function(){vm.sortOrder.column="",vm.sortOrder.reverse=!1}},vm.save=function(){vm.saveButtonState="busy";var order=[];for(let i=0;i<vm.servers.length;i++)order.push(vm.servers[i].alias);uSyncPublishService.setServerOrder(order).then(function(result){navigationService.syncTree({tree:"uSyncPublisher",path:$scope.currentNode.path,forceReload:!0}).then(()=>navigationService.reloadNode($scope.currentNode)),$rootScope.$broadcast("usync-publish-server-sort"),vm.saveButtonState="success"},function(error){vm.error=error,vm.saveButtonState="error"})},vm.close=function(){navigationService.hideDialog()},vm.sort=function(column){},vm.loading=!0,uSyncPublishService.getAllServers().then(function(result){vm.servers=result.data,vm.loading=!1})})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublisherCompleteController",function($scope){$scope.vm.complete=!0})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublisherConfigPullController",function($scope,uSyncPublishService){var unsubscribe=[],pvm=this;pvm.syncSettings=!1,pvm.syncContent=!1,pvm.syncMedia=!1,pvm.mode=$scope.vm.mode,pvm.contentType=$scope.vm.contentType,pvm.process=$scope.vm.process,pvm.flags={includeChildren:{toggle:!0,value:!0},includeDecendants:{toggle:!0,value:!0},includeMedia:{toggle:!1,value:!1},includeLinked:{toggle:!1,value:!1},includeAncestors:{toggle:!1,value:!1},includeDependencies:{toggle:!1,value:!1},includeFiles:{toggle:!1,value:!0},includeMediaFiles:{toggle:!1,value:!1},deleteMissing:{toggle:!1,value:!1},includeSystemFiles:{toggle:!1,value:!1}},pvm.flagsValue=uSyncPublishService.getFlags(pvm.flags);var emptyGuid="00000000-0000-0000-0000-000000000000";pvm.items={docTypes:{toggle:!0,value:!0,typeName:"document-type",root:emptyGuid,name:"Document types"},dataTypes:{toggle:!0,value:!0,typeName:"data-type",root:emptyGuid,name:"Data types"},mediaTypes:{toggle:!0,value:!0,typeName:"media-type",root:emptyGuid,name:"Media types"},domains:{toggle:!0,value:!0,typeName:"domain",root:emptyGuid,name:"Domain settings"},memberTypes:{toggle:!0,value:!0,typeName:"member-type",root:emptyGuid,name:"Member types"},dictionary:{toggle:!0,value:!0,typeName:"dictionary-item",root:emptyGuid,name:"Dictionary items"},macro:{toggle:!0,value:!0,typeName:"macro",root:emptyGuid,name:"Macros"},template:{toggle:!0,value:!0,typeName:"template",root:emptyGuid,name:"Templates"},files:{toggle:!0,value:!0,typeName:null,root:"",name:"Files"},systemFiles:{toggle:!0,value:!1,typeName:null,root:"",name:""},languages:{toggle:!0,value:!0,typeName:"language",root:"",name:"Languages"},protect:{toggle:!0,value:!0,typeName:"protect",root:emptyGuid,name:"Public access settings"},content:{toggle:!0,value:!1,typeName:"document",root:emptyGuid,name:"Content"},media:{toggle:!0,value:!1,typeName:"media",root:emptyGuid,name:"Media"},relationTypes:{toggle:!0,value:!0,typeName:"relation-type",root:emptyGuid}},pvm.server=$scope.vm.selectedServer;var item=$scope.vm.items[0],contentName=item.name;function toggleItems(value,content){Object.keys(pvm.items).forEach(key=>{(content||"media"!==key&&"content"!==key)&&(pvm.items[key].value=value)})}function toggleSettings(){pvm.syncSettings=!pvm.syncSettings,pvm.items.docTypes.value=pvm.syncSettings,pvm.items.dataTypes.value=pvm.syncSettings,pvm.items.mediaTypes.value=pvm.syncSettings,pvm.items.memberTypes.value=pvm.syncSettings,pvm.items.dictionary.value=pvm.syncSettings,pvm.items.macro.value=pvm.syncSettings,pvm.items.template.value=pvm.syncSettings,pvm.items.files.value=pvm.syncSettings,pvm.items.languages.value=pvm.syncSettings,pvm.syncSettings||(pvm.syncMedia&&toggleMedia(),pvm.syncContent&&toggleContent())}function toggleMedia(){pvm.syncMedia=!pvm.syncMedia,pvm.items.media.value=pvm.syncMedia,pvm.syncMedia&&!pvm.syncSettings&&toggleSettings()}function toggleContent(){pvm.syncContent=!pvm.syncContent,pvm.items.content.value=pvm.syncContent,pvm.items.domains.value=pvm.syncContent,pvm.items.protect.value=pvm.syncContent,pvm.syncContent&&!pvm.syncSettings&&toggleSettings()}void 0!==$scope.vm.headings&&($scope.vm.headings.title="PULL settings",$scope.vm.headings.description="PULL settings from "+pvm.server.name),function(){pvm.process.options={removeOrphans:pvm.flags.deleteMissing.value,includeFileHash:pvm.flags.includeFiles.value},pvm.process.items=[{id:item.id,name:contentName,udi:item.udi,flags:uSyncPublishService.getFlags(pvm.flags)}],$scope.vm.options.simple&&(toggleSettings(),toggleContent(),toggleMedia());unsubscribe.push($scope.$watch("pvm.items",function(newVal,oldVal){void 0!==newVal&&(pvm.process.items=[],angular.forEach(newVal,function(value,key){"files"===key?pvm.process.options.includeFileHash=value.value:"systemFiles"==key?pvm.process.options.includeSystemFileHash=value.value:!0===value.value&&null!==value.typeName&&pvm.process.items.push({udi:"umb://"+value.typeName+"/"+value.root,name:value.typeName,flags:pvm.flagsValue})}),!0===newVal.template.value&&!0!==newVal.files.value&&(newVal.files.value=!0))},!0))}(),$scope.$on("$destroy",function(){for(var u in unsubscribe)unsubscribe[u]()}),pvm.clearAll=function(){toggleItems(!1,!0)},pvm.selectAll=function(){toggleItems(!0,!1)},pvm.toggleSettings=toggleSettings,pvm.toggleContent=toggleContent,pvm.toggleMedia=toggleMedia,pvm.toggleMode=function(){$scope.vm.options.simple=!$scope.vm.options.simple}})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublisherConfigPushController",function($scope,uSyncPublishService){var unsubscribe=[],pvm=this;pvm.mode=$scope.vm.mode,pvm.contentType=$scope.vm.contentType,pvm.process=$scope.vm.process,pvm.flags={includeChildren:{toggle:!0,value:!0},includeDecendants:{toggle:!0,value:!0},includeMedia:{toggle:!1,value:!1},includeLinked:{toggle:!1,value:!1},includeAncestors:{toggle:!1,value:!1},includeDependencies:{toggle:!1,value:!1},includeFiles:{toggle:!1,value:!0},includeMediaFiles:{toggle:!1,value:!1},deleteMissing:{toggle:!1,value:!1},includeSystemFiles:{toggle:!1,value:!1}},pvm.flagsValue=uSyncPublishService.getFlags(pvm.flags);var contentName="00000000-0000-0000-0000-000000000000";pvm.items={docTypes:{toggle:!0,value:!0,typeName:"document-type",root:contentName},dataTypes:{toggle:!0,value:!0,typeName:"data-type",root:contentName},mediaTypes:{toggle:!0,value:!0,typeName:"media-type",root:contentName},domains:{toggle:!0,value:!0,typeName:"domain",root:contentName},memberTypes:{toggle:!0,value:!0,typeName:"member-type",root:contentName},dictionary:{toggle:!0,value:!0,typeName:"dictionary-item",root:contentName},macro:{toggle:!0,value:!0,typeName:"macro",root:contentName},template:{toggle:!0,value:!0,typeName:"template",root:contentName},files:{toggle:!0,value:!0,typeName:null,root:""},systemFiles:{toggle:!0,value:!1,typeName:null,root:""},languages:{toggle:!0,value:!0,typeName:"language",root:""},protect:{toggle:!0,value:!0,typeName:"protect",root:contentName},content:{toggle:!0,value:!1,typeName:"document",root:contentName},media:{toggle:!0,value:!1,typeName:"media",root:contentName},relationTypes:{toggle:!0,value:!0,typeName:"relation-type",root:contentName}},pvm.server=$scope.vm.selectedServer;var item=$scope.vm.items[0],contentName=item.name;function toggleItems(value,content){Object.keys(pvm.items).forEach(key=>{(content||"media"!==key&&"content"!==key)&&(pvm.items[key].value=value)})}void 0!==$scope.vm.headings&&($scope.vm.headings.title="PUSH Settings",$scope.vm.headings.description="PUSH settings to "+pvm.server.name),pvm.process.options={removeOrphans:pvm.flags.deleteMissing.value,includeFileHash:pvm.flags.includeFiles.value},pvm.process.items=[{id:item.id,name:contentName,udi:item.udi,flags:uSyncPublishService.getFlags(pvm.flags)}],unsubscribe.push($scope.$watch("pvm.items",function(newVal,oldVal){void 0!==newVal&&(pvm.process.items=[],angular.forEach(newVal,function(value,key){"files"===key?pvm.process.options.includeFileHash=value.value:"systemFiles"==key?pvm.process.options.includeSystemFileHash=value.value:!0===value.value&&null!==value.typeName&&pvm.process.items.push({udi:"umb://"+value.typeName+"/"+value.root,name:value.typeName,flags:pvm.flagsValue})}),!0===newVal.template.value&&!0!==newVal.files.value&&(newVal.files.value=!0))},!0)),$scope.$on("$destroy",function(){for(var u in unsubscribe)unsubscribe[u]()}),pvm.clearAll=function(){toggleItems(!1,!0)},pvm.selectAll=function(){toggleItems(!0,!1)}})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublisherLanguageController",function($scope,uSyncActionManager){var pvm=this;pvm.loading=!0,pvm.all=!0,pvm.process=$scope.vm.process,pvm.itemtype="content",pvm.mode=$scope.vm.mode,pvm.flags=$scope.vm.flags,pvm.server=pvm.process.server,null!=$scope.model&&($scope.model.title="Select languages",$scope.model.subtitle="Select Languages to publish to "+pvm.server.name),pvm.variants=_.map($scope.vm.items[0].variants,function(name,id){return{_checked:!0,name:name,id:id}}),pvm.loading=!1;var watchEvent=$scope.$watch("pvm.variants",function(newValue){if(void 0!==newValue){pvm.process.options.cultures=[],$scope.vm.valid=!1;for(let i=0;i<newValue.length;i++)!0===newValue[i]._checked&&(pvm.process.options.cultures.push(newValue[i].id),$scope.vm.valid=!0);console.log(pvm.process.options.cultures.length,newValue.length),pvm.process.options.cultures.length==newValue.length?(pvm.process.options.cultures=[],pvm.all=!0):pvm.all=!1}},!0);$scope.$on("$destroy",function(){watchEvent()})})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublisherOptionsController",function($scope,dateHelper,userService,uSyncPublishService,uSyncActionManager){var pvm=this,evts=[];pvm.process=$scope.vm.process,pvm.headings=$scope.vm.headings,pvm.mode=$scope.vm.mode,pvm.contentType=$scope.vm.contentType,pvm.flags=$scope.vm.flags,pvm.action=pvm.process.action,pvm.server=$scope.vm.server,pvm.showtoggle=pvm.server.sendSettings.hideAdvanced,pvm.showAdvanced=!pvm.showtoggle,null!==pvm.headings&&(pvm.headings.boxTitle=pvm.server.name+": Settings",pvm.headings.boxDescription=uSyncActionManager.getDescription(pvm.mode,pvm.contentType,pvm.server.name)),pvm.items=pvm.process.items,pvm.firstItem=pvm.items[0],pvm.contentName=pvm.firstItem.name,pvm.showChildren=1<pvm.items.length||pvm.firstItem.hasChildren,function(){var flags=uSyncPublishService.getFlags(pvm.flags);!0===pvm.mode.startsWith("file")&&(flags=0,pvm.process.options.includeContent=!0);_.map(pvm.items,function(item){item.flags=flags}),1<pvm.items.length&&(pvm.flags.deleteMissing.value=!1);pvm.process.options.items=pvm.items,pvm.process.options.removeOrphans=pvm.flags.deleteMissing.value,pvm.process.options.includeFileHash=pvm.flags.includeFiles.value,evts.push($scope.$watch("pvm.flags",function(flags,oldVal){var flagValue;void 0!==flags&&(flags=pvm.flags,flagValue=uSyncPublishService.getFlags(flags),pvm.process.items.forEach(function(item){item.flags=flagValue}),pvm.process.options.removeOrphans=pvm.flags.deleteMissing.value,pvm.process.options.includeFileHash=pvm.flags.includeFiles.value)},!0)),pvm.showtoggle=function(){if(!pvm.server.sendSettings.hideAdvanced)return!1;if(!0===pvm.action.actionOptions.canSchedule)return!0;for(var flag in pvm.flags)if("includeChildren"!=flag&&"deleteMissing"!==flag&&1==pvm.flags[flag].toggle)return!0;return!1}(),pvm.showAdvanced=!pvm.showtoggle}(),$scope.$on("$destroy",function(){for(var e in evts)evts[e]()}),$scope.$on("sync-server-selected",function(event,args){pvm.server=args.server}),pvm.process.options.attributes={},pvm.process.options.attributes.releaseDate=null,pvm.currentUser=null,pvm.releaseDateFormatted=null,pvm.datePickerSetup=function(instance){pvm.flatPickr=instance},pvm.datePickerChange=function(serverTime){serverTime&&(serverTime=dateHelper.convertToServerStringTime(moment(serverTime),Umbraco.Sys.ServerVariables.application.serverTimeOffset),pvm.releaseDate=serverTime,pvm.releaseDateFormatted=dateHelper.getLocalDate(pvm.releaseDate,pvm.currentUser.locale,"MMM Do YYYY, HH:mm"),pvm.process.options.attributes.releaseDate=serverTime)},pvm.datePickerShow=function(){},pvm.datePickerClose=function(){},pvm.clearPublishDate=function(){pvm.process.options.attributes.releaseDate=null,pvm.releaseDate=null;var nowFormatted=new Date,nowFormatted=moment(nowFormatted).format("YYYY-MM-DD HH:mm");pvm.flatPickr.set("minDate",nowFormatted)},pvm.flatPickr=null,userService.getCurrentUser().then(function(nowFormatted){pvm.currentUser=nowFormatted;nowFormatted=new Date,nowFormatted=moment(nowFormatted).format("YYYY-MM-DD HH:mm");pvm.datePickerConfig={enableTime:!0,dateFormat:"Y-m-d H:i",time_24hr:!0,minDate:nowFormatted,defaultDate:nowFormatted}})})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublisherReportController",function($scope){var server,pvm=this;pvm.results=$scope.vm.report,pvm.showDetails=!0,pvm.server=$scope.vm.server,null!=$scope.vm&&null!=$scope.vm.server&&(server=$scope.vm.server,$scope.vm.headings.boxTitle=server.name+": Report",$scope.vm.headings.boxDescription=server.description+" ["+server.url+"]"),$scope.vm.complete=!function(results){for(let i=0;i<results.length;i++)if("NoChange"!==results[i].change)return!0;return!1}(pvm.results),$scope.vm.state.complete=$scope.vm.complete,$scope.vm.postActions=function(results){for(let i=0;i<results.length;i++)if(results[i].itemType.startsWith("Umbraco.Cms.Core.Models.IFile")&&results[i].requiresPostProcessing)return!0;return!1}(pvm.results),pvm.toggleDetails=function(){pvm.showDetails=!pvm.showDetails}})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublisherResultController",function($scope){var server;this.showDetails=!0,this.results=$scope.vm.report,this.server=$scope.vm.server,this.complete=function(results){if(null!=results&&null!==results)for(let i=0;i<results.length;i++)if("WillChange"===results[i].Change)return!1;return!0}(this.results),$scope.vm.state.complete=this.complete,null!=$scope.model&&null!=$scope.vm&&null!=$scope.vm.selectedServer&&(server=$scope.vm.selectedServer,$scope.model.title=server.name+" Complete",$scope.model.subtitle=server.description+": ["+server.url+"]")})}(),function(){"use strict";angular.module("umbraco").controller("uSyncPublisherSeedController",function($scope,uSyncPublishService){var url,vm=this;vm.loading=!0,vm.seedUrl=Umbraco.Sys.ServerVariables.uSyncPublisher.seedUrl,url=vm.seedUrl,uSyncPublishService.getServerByUrl(url).then(function(parent){var server;vm.server=parent.data,server=vm.server,null!=(parent=$scope.$parent)&&null!=parent.vm&&null!=parent.vm.headings&&(parent.vm.headings.title="Seed from "+server.name,parent.vm.headings.description="Selec the items you want to pull from the "+server.name+" instance"),vm.loading=!1}),vm.process=$scope.$parent.vm.process,vm.flags={includeChildren:{toggle:!0,value:!0},includeDecendants:{toggle:!0,value:!0},includeMedia:{toggle:!1,value:!1},includeLinked:{toggle:!1,value:!1},includeAncestors:{toggle:!1,value:!1},includeDependencies:{toggle:!1,value:!1},includeFiles:{toggle:!1,value:!0},includeMediaFiles:{toggle:!1,value:!1},deleteMissing:{toggle:!1,value:!1},includeSystemFiles:{toggle:!1,value:!1}},vm.flagsValue=uSyncPublishService.getFlags(vm.flags),vm.emptyGuid="00000000-0000-0000-0000-000000000000",vm.emptyString="",vm.groups=[{name:"Settings",icon:"icon-settings",selected:!0,items:[{name:"document-type",root:vm.emptyGuid},{name:"data-type",root:vm.emptyGuid},{name:"media-type",root:vm.emptyGuid},{name:"domain",root:vm.emptyGuid},{name:"member-type",root:vm.emptyGuid},{name:"dictionary-item",root:vm.emptyGuid},{name:"macro",root:vm.emptyGuid},{name:"template",root:vm.emptyGuid},{name:"language",root:vm.emptyString}]},{name:"Content",icon:"icon-documents",items:[{name:"document",root:vm.emptyGuid},{name:"protect",root:vm.emptyGuid}]},{name:"Media",icon:"icon-pictures-alt",items:[{name:"media",root:vm.emptyGuid}]}];var evts=[];evts.push($scope.$watch("vm.groups",function(newValue){vm.process.items=[],_.each(newValue,function(group){group.selected&&_.each(group.items,function(item){vm.process.items.push({udi:"umb://"+item.name+"/"+item.root,name:item.name,flags:vm.flagsValue})})}),0==vm.process.items.length?$scope.$parent.vm.state.valid=!1:$scope.$parent.vm.state.valid=!0},!0)),$scope.$on("$destroy",function(){for(var u in evts)evts[u]()})})}(),function(){"use strict";angular.module("umbraco").controller("realtimeServerConfigController",function($scope,$http){this.showAll=!0})}();
//# sourceMappingURL=usyncpublisher.9.4.0.min.js.map
