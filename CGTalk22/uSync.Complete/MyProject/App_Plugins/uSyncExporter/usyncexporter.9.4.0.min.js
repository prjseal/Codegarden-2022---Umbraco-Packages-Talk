!function(){"use strict";angular.module("umbraco").controller("uSyncExporterDashboardController",function($scope,$q,editorService,overlayService,uSyncExportManager,uSyncExporterService){var vm=this;function prepItem(item,entityType){switch(item.flags={includeChildren:!1,includeAncestors:!0,includeDependencies:!0},void 0!==(item.entityType=entityType)&&null==item.udi&&(item.id=item.id.replaceAll("+","%20").replaceAll("%2F","/")),item.nodeType){case"media":case"content":case"container":item.flags.includeChildren=!0;break;case"templates":item.flags.includeFiles=!0;break;case"dictionary":item.flags.includeAncestors=!1,item.flags.includeDependencies=!1;break;case"templates":item.flags.includeContent=!0;break;default:!0===item.hasChildren&&(item.flags.includeChildren=!0)}}function findItem(id,selection){if(0<selection.length)for(let n=0;selection.length>n;n++)if(selection[n].id===id)return n;return-1}vm.licenced=!1,vm.loading=!0,vm.selection=[],vm.showHelp=function(title,view){vm.help={title:title,subtitle:"uSync exporter help",view:Umbraco.Sys.ServerVariables.uSync.exporterPluginPath+"/help/"+view+".html",show:!0,hideSubmitButton:!0,submit:function(model){vm.help.show=!1,vm.help={}},close:function(model){vm.help.show=!1,vm.help={}}}},vm.pickTypes=function(exporter){var options={section:exporter.section,title:"Add "+exporter.type,treeAlias:exporter.type,multiPicker:!0,size:"small",view:exporter.view,idType:"int",submit:function(model){vm.selection=vm.selection.concat(function(selection,entityType){if(0<selection.length)for(let n=0;selection.length>n;n++)prepItem(selection[n],entityType);return selection}(model.selection,exporter.entityType)),vm.selection=_.uniq(vm.selection,!1,function(s){return s.id+s.name}),editorService.close()},close:function(){editorService.close()},select:function(index){var item,selection,entityType;index.selected=!0!==index.selected,item=index,selection=this.selection,entityType=exporter.entityType,-1!=(index=findItem(item.id,selection))?selection.splice(index,1):(prepItem(item,entityType),selection.push(item))},selection:vm.selection};exporter.blockContainers&&(options.filter=function(i){return i.metaData.isContainer},options.filterCssClass="not-allowed");editorService.treePicker(options)},vm.createExport=function(){var overlay={options:{selection:vm.selection,includeFiles:vm.includeFiles,includeMedia:vm.includeMedia,includeLinked:vm.includeLinked,includeConfig:vm.includeConfig},view:Umbraco.Sys.ServerVariables.uSync.exporterPluginPath+"/exportoverlay.html",title:"Create sync pack",subtitle:"Create a sync pack of the items you want to export",disableBackdropClick:!0,disableEscKey:!0,submitButtonLabel:"Create",closeButtonLabel:"Close",submit:function(model){null!==model.create&&void 0!==model.create&&model.create()},close:function(close){overlayService.close()}};overlayService.open(overlay)},vm.remove=function(index){index=findItem(index,vm.selection);-1!=index&&vm.selection.splice(index,1)},vm.openImportDialog=function(){uSyncExportManager.openImportDialog({entity:{id:-1,name:"uSync Pack"}},null)},vm.disableImport=Umbraco.Sys.ServerVariables.uSync.exporterDisableImport,function(){vm.loading=!0;var promises=[];promises.push(uSyncExporterService.isLicenced().then(function(result){vm.licenced=result.data})),promises.push(uSyncExporterService.getSettings().then(function(result){vm.version=result.data.version,vm.includeFiles=result.data.includeFiles,vm.includeMedia=result.data.includeMedia,vm.includeLinked=result.data.includeLinked})),promises.push(uSyncExporterService.getExporters().then(function(result){vm.exporters=result.data})),$q.all(promises).then(function(){vm.loading=!1})}()})}(),function(){"use strict";angular.module("umbraco").controller("usyncExporterExportController",function($scope,navigationService,overlayService,uSyncExporterService){var vm=this;function exportItem(){!function(item){switch(item.flags={includeChildren:!1,includeAncestors:!0,includeDependencies:!0},item.nodeType){case"media":case"content":case"container":item.flags.includeChildren=!0;break;case"templates":item.flags.includeFiles=!0;break;case"macros":item.udi="umb://macro/00000000-0000-0000-0000-000000000000"}}(vm.node),vm.options.selection=[vm.node];var overlay={options:vm.options,view:Umbraco.Sys.ServerVariables.uSync.exporterPluginPath+"/exportoverlay.html",title:"Create a sync pack",subtitle:"Create a sync pack of the items you want to export",disableBackdropClick:!0,disableEscKey:!0,submitButtonLabel:"Create",closeButtonLable:"close",submit:function(model){null!==model.create&&void 0!==model.create&&model.create()},close:function(close){overlayService.close()}};overlayService.open(overlay)}vm.hasError=!1,vm.node=$scope.currentNode,vm.exportItem=exportItem,vm.exportContainer=function(itemType){console.log(vm.node),exportItem()},vm.hasChildren=$scope.currentNode.hasChildren,vm.isDocType="documentTypes"===$scope.currentNode.nodeType,vm.isMedia="media"===$scope.currentNode.nodeType,vm.options={includeChildren:!1,includeAncestors:!0,includeDependencies:!0,includeFiles:!1,includeMedia:!1},vm.close=function(){$scope.model&&$scope.model.close?$scope.model.close():navigationService.hideDialog()}})}(),function(){"use strict";angular.module("umbraco").factory("uSyncExportManager",function(editorService,navigationService){return{openImportDialog:function(options,cb){navigationService.hideDialog(),editorService.open({entity:{id:+options.entity.id,name:options.entity.name},title:"Import uSync Pack",view:Umbraco.Sys.ServerVariables.uSync.exporterPluginPath+"/import.html",submit:function(done){editorService.close(),null!=cb&&cb(!0)},close:function(){editorService.close(),null!=cb&&cb(!1)}})}}})}(),function(){"use strict";angular.module("umbraco").factory("uSyncExporterService",function($http,$q,umbRequestHelper,uSyncDependencyManager){var serviceRoot=Umbraco.Sys.ServerVariables.uSync.exporterService;return{getSettings:function(){return $http.get(serviceRoot+"GetSettings")},getExporters:function(){return $http.get(serviceRoot+"GetExporters")},isLicenced:function(){return $http.get(serviceRoot+"IsLicenced")},getSyncItems:function(items){return $http.post(serviceRoot+"GetSyncItems",items)},createExport:function(request){return $http.post(serviceRoot+"CreateExport",request)},getExport:function(request){return function(httpPath,payload){return $http.post(httpPath,payload,{responseType:"arraybuffer"}).then(function(response){var success=!1,contentType=response.headers(),filename=function(matches){matches=matches["content-disposition"];if(matches&&-1!==matches.indexOf("attachment")){matches=/filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/.exec(matches);if(null!=matches&&matches[1])return matches[1].replace(/['"]/g,"")}return"sync-pack.usync"}(contentType),contentType=contentType["content-type"]||"application/octet-stream";try{var link=new Blob([response.data],{type:contentType});if(navigator.msSaveBlob)navigator.msSaveBlob(link,filename);else{var urlCreator=navigator.webkitSaveBlob||navigator.mozSaveBlob||navigator.saveBlob;if(void 0===urlCreator)throw"Not supported";urlCreator(link,filename)}success=!0}catch(ex){console.log("saveBlob method failed with the following exception:"),console.log(ex)}if(!success){urlCreator=window.URL||window.webkitURL||window.mozURL||window.msURL;if(urlCreator){link=document.createElement("a");if("download"in link)try{let blob=new Blob([response.data],{type:contentType});var url=urlCreator.createObjectURL(blob);link.setAttribute("href",url),link.setAttribute("download",filename);var event=document.createEvent("MouseEvents");event.initMouseEvent("click",!0,!0,window,1,0,0,0,0,!1,!1,!1,!1,0,null),link.dispatchEvent(event),success=!0}catch(ex){console.log("Download link method with simulated click failed with the following exception:"),console.log(ex)}if(!success)try{let blob=new Blob([response.data],{type:"application/octet-stream"}),url=urlCreator.createObjectURL(blob);window.location=url,success=!0}catch(ex){console.log("Download link method with window.location failed with the following exception:"),console.log(ex)}}}return success||window.open(httpPath,"_blank",""),$q.resolve()},function(response){return $q.reject({errorMsg:"An error occurred downloading the file",data:response.data,status:response.status})})}(serviceRoot+"GetExport",request)},reportPack:function(request){return $http.post(serviceRoot+"ReportPack",request)},importPack:function(request){return $http.post(serviceRoot+"ImportPack",request)}}})}(),angular.module("umbraco").controller("uSyncExportOverlayController",function($scope,uSyncHub,uSyncExporterService){var vm=this;function getExport(){vm.update.Message="Compressing `Sync-Pack'",uSyncExporterService.getExport(vm.options).then(function(result){$scope.model.hideSubmitButton=!0,$scope.model.closeButtonLabel="Done",vm.update.Count=100,vm.update.Total=100,vm.exporting=!1,vm.complete=!0})}function getClientId(){return void 0!==$.connection?$.connection.connectionId:""}vm.exporting=!1,vm.loading=!0,vm.valid=!0,vm.complete=!1,vm.update={},$scope.model.exported=!1,$scope.model.create=function(){$scope.model.disableSubmitButton=!0,$scope.model.submitButtonState="busy",vm.exporting=!0,function processExport(){vm.options.clientId=getClientId();uSyncExporterService.createExport(vm.options).then(function(response){response=response.data;vm.options.id=response.id,vm.options.request.items=response.response.items,vm.progress=response.progress,response.exportComplete?getExport():(vm.options.stepIndex=response.stepIndex,vm.options.request.pageNumber=response.nextPage,processExport())})}()},vm.options={id:"00000000-0000-0000-0000-000000000000",name:"syncpack_"+moment().format("YYYY_MM_DD_hhmmss"),stepIndex:0,request:{pageNumber:0,items:[],options:{removeOrphans:!1,includeFiles:$scope.model.options.includeFiles,includeFileHash:!1,includeSystemFiles:!1,includeMediaFiles:$scope.model.options.includeMedia}},clientId:getClientId()},vm.selection=$scope.model.options.selection,function(items){items=function(selection,options){var items=[];for(let n=0;n<selection.length;n++)items.push({id:selection[n].id,udi:selection[n].udi,name:selection[n].name,nodeType:selection[n].nodeType,entityType:selection[n].entityType,includeChildren:selection[n].flags.includeChildren,includeAncestors:selection[n].flags.includeAncestors,includeDependencies:selection[n].flags.includeDependencies,includeMedia:options.includeMedia,includeConfig:options.includeConfig,includeLinked:options.includeLinked,includeViews:options.includeFiles});options.includeDictionary&&items.push({id:-1,udi:"umb://dictionary-item/00000000-0000-0000-0000-000000000000",includeChildren:!0,name:"All dictionary items"});return items}(items,$scope.model.options);uSyncExporterService.getSyncItems(items).then(function(result){vm.options.request.items=result.data,vm.loading=!1},function(error){console.log(error),vm.loading=!1,vm.valid=!1,$scope.model.hideSubmitButton=!0,vm.error=error.data})}(vm.selection),vm.calcPercentage=function(update){return null==update?0:update.count/update.total*100},uSyncHub.initHub(function(hub){vm.hub=hub,vm.hub.on("update",function(update){vm.update=update,vm.update.blocks=update.message.split("||"),console.log(vm.update)}),vm.hub.on("add",function(status){vm.status=status}),vm.hub.start()})}),function(){"use strict";angular.module("umbraco").controller("uSyncExporterImportController",function($scope,navigationService,notificationsService,uSyncExporterService,Upload,uSyncHub){var vm=this;function reportPack(){vm.state="busy",uSyncExporterService.reportPack(vm.options).then(function(response){response=response.data;vm.options.id=response.id,vm.progress=response.progress,response.response.success?(updateActions(response),response.exportComplete?vm.state="report":(vm.options.stepIndex=response.stepIndex,vm.options.request.pageNumber=response.nextPage,vm.options.request.handlerFolder=response.nextFolder,reportPack())):(vm.state="error",vm.errorMessage=response.response.message)},function(error){handleError(error)})}function handleError(error){vm.running=!1,vm.progress.steps[vm.progress.currentStepIndex].status="Error",vm.buttonState="error",vm.showError=!0,vm.errorMessage=getError(error.data),console.log(error),notificationsService.error("error",vm.errorMessage)}function getError(error){var key=Object.keys(error).find(k=>"exceptionmessage"===k.toLowerCase());if(void 0!==key)return error[key]}function updateActions(actions){null==actions||null==actions.response||null!=(actions=actions.response.actions)&&0<actions.length&&(vm.report=actions)}function initOptions(){vm.options={id:vm.importId,stepIndex:0,request:{pageNumber:0},clientId:getClientId()}}function getClientId(){return void 0!==$.connection?$.connection.connectionId:""}function calcPercentage(status){return void 0!==status?100*status.count/status.total:1}vm.buttonState="init",vm.importGroup={defaultButton:{labelKey:"usync_import",handler:function(){vm.importPack(vm.importId,!1)}},subButtons:[{labelKey:"usync_importforce",handler:function(){vm.importPack(vm.importId,!0)}}]},vm.options={},vm.close=function(){$scope.model.close?$scope.model.close():navigationService.hideDialog()},vm.handleFiles=function(files,event){files&&0<files.length&&(vm.file=files[0])},vm.upload=function(file){vm.buttonState="busy",vm.running=!0,vm.uploaded=!1,Upload.upload({url:Umbraco.Sys.ServerVariables.uSync.exporterService+"UploadFile",fields:{clientId:getClientId()},file:file}).success(function(data,status,headers,config){vm.buttonState="success",vm.running=!1,vm.uploaded=!0,vm.importId=data.id,initOptions(),reportPack()}).error(function(evt,status,headers,config){vm.running=!1,vm.buttonState="error",notificationsService.error("error",getError(error.data))})},vm.importPack=function(){initOptions(),function processImport(){vm.state="busy";uSyncExporterService.importPack(vm.options).then(function(response){response=response.data;vm.options.id=response.id,vm.progress=response.progress,updateActions(response),response.exportComplete?vm.state="imported":(vm.options.stepIndex=response.stepIndex,vm.options.request.pageNumber=response.nextPage,vm.options.request.handlerFolder=response.nextFolder,processImport())},function(error){handleError(error)})}()},vm.reportPack=reportPack,vm.countChanges=function(changes){var count=0;return angular.forEach(changes,function(val,key){"NoChange"!==val.Change&&count++}),count},vm.file=null,vm.report=[],vm.state="init",vm.imported=!1,vm.running=!1,vm.uploaded=!1,vm.update={Message:"Importing",Count:1,Total:1},uSyncHub.initHub(function(hub){vm.hub=hub,vm.hub.on("update",function(update){vm.update=update}),vm.hub.on("add",function(data){vm.status=data}),vm.hub.start()}),vm.calcPercentage=calcPercentage,vm.getTypeName=function(umbType){umbType=umbType.substring(0,umbType.indexOf(","));return umbType.substring(umbType.lastIndexOf(".")+1)},vm.calcPercentage=calcPercentage})}(),function(){var syncOptionsComponent={templateUrl:Umbraco.Sys.ServerVariables.application.applicationPath+"App_Plugins/uSyncExporter/components/itemoptions.html",controllerAs:"vm",controller:function(){},bindings:{options:"=",hideDecendants:"<",hideFiles:"<"}};angular.module("umbraco").component("usyncExportSyncOptions",syncOptionsComponent)}();
//# sourceMappingURL=usyncexporter.9.4.0.min.js.map
